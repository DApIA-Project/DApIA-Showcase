{"version":3,"sources":["../node_modules/three/build/three.module.js","script/noise.ts","script/threeAddons/libs/fflate.module.js","script/threeAddons/curves/NURBSUtils.js","script/threeAddons/curves/NURBSCurve.js","script/threeAddons/loaders/FBXLoader.js","script/utils.ts","script/mountain.ts","script/threeAddons/loaders/OBJLoarder.js","script/Html3D.ts","script/index.ts","../node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","type","listener","_listeners","undefined","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","constructor","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","Error","normalize","round","MathUtils","Vector2","prototype","isVector2","scalar","v","multiplyScalar","e","elements","minVal","maxVal","divideScalar","trunc","sqrt","angle","atan2","denominator","lengthSq","theta","dot","acos","distanceToSquared","dx","dy","alpha","v1","v2","offset","attribute","getX","getY","center","Symbol","iterator","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","premultiply","_m3","makeScale","makeRotation","makeTranslation","matrix","fromArray","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","name","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","applyMatrix3","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","Object","defineProperty","dataReady","version","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","getDataURL","from","_textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","setUvTransform","copy","JSON","parse","stringify","needsUpdate","textures","metadata","generator","toJSON","wrap","keys","dispatchEvent","uv","encoding","Vector4","z","w","isVector4","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","RenderTarget","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","depthTexture","samples","texture","dispose","clone","WebGLRenderTarget","isWebGLRenderTarget","DataArrayTexture","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","count","isWebGLMultipleRenderTargets","il","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","euler","update","_order","c1","c3","s1","s3","axis","halfAngle","trace","vFrom","vTo","Number","EPSILON","step","angleTo","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","qa","u1","sqrt1u1","sqrtu1","u2","u3","toArray","callback","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","Vector3","isVector3","applyQuaternion","_quaternion$4","setFromEuler","setFromAxisAngle","vx","vy","vz","qx","qy","qz","qw","tz","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","planeNormal","_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","u","Box3","Infinity","isBox3","makeEmpty","expandByPoint","_vector$b","fromBufferAttribute","points","size","halfSize","add","object","precise","expandByObject","box","isEmpty","addVectors","subVectors","point","vector","addScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceTo","getSize","_points","setFromPoints","equals","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","delta","addScaledVector","setLength","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","isNaN","intersectBox","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","position","scale","x2","y2","z2","wx","wy","wz","determinant","_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","coordinateSystem","p","zInv","_matrix$1","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","Layers","mask","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","updateMatrix","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","arguments","error","remove","id","getObjectByProperty","child","result","getObjectsByProperty","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","i0","i1","i2","getNormal","setFromCoplanarPoints","getBarycoord","v3","getInterpolation","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","setScalar","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","_color","getHex","toString","hue","saturation","lightness","toFixed","getHSL","color1","color2","NAMES","_materialId","Material","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBeforeCompile","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","isMeshBasicMaterial","setValues","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","TypeError","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","start","index1","index2","setXY","setXYZ","applyNormalMatrix","component","onUploadCallback","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","_id$2","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","materialIndex","getNormalMatrix","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","negate","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","jl","indices","positions","normals","uvs","nVertices","hasAttribute","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","addGroup","hasMorphAttributes","attributeArray","setIndex","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","morphPosition","morphInfluences","influence","raycaster","intersects","recast","intersectSphere","intersectsBox","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","intersect","intersectTriangle","uv2","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","tan","minTarget","maxTarget","getViewBounds","fullWidth","fullHeight","offsetX","offsetY","skew","getFilmWidth","makePerspective","CubeCamera","renderTarget","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","cameras","concat","scene","updateCoordinateSystem","currentRenderTarget","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","isWebGLCubeRenderTarget","shader","tEquirect","mesh","currentMinFilter","stencil","clear","_vector1","_vector2","_normalMatrix","Plane","isPlane","setFromNormalAndCoplanarPoint","inverseNormalLength","line","startSign","endSign","intersectsPlane","optionalNormalMatrix","referencePoint","coplanarPoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","clearUpdateRanges","get","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","toneMapping","enableAll","unshift","getRGB","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","getParameter","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","renderMultiDraw","starts","counts","drawCount","multiDrawArraysWEBGL","elementCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","fromEquirectangularTexture","addEventListener","onTextureDispose","removeEventListener","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","makeOrthographic","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","equirectangular","_fromTexture","_getCubemapMaterial","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","fromEquirectangular","fromCubemap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","multiDrawElementsWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","disposeTexture","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","hasEventListener","onInstancedMeshDispose","instancedMesh","DepthTexture","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateVertexExtensions","extensionClipCullDistance","extensionMultiDraw","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","getVertexShaderID","getFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","customProgramCacheKey","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","disableAll","enable","acquireProgram","pl","preexistingProgram","releaseProgram","pop","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","intersectsObject","k","kl","depthMaterial","onBeforeShadow","onAfterShadow","shadowMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","disable","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","complete","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","sRGBToLinear","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","hand","inputjoint","_getHandJoint","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","cameraXR","depthColor","depthWidth","depthHeight","WebXRManager","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","disconnect","setPixelRatio","setSize","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","xrCompatible","makeXRCompatible","getPixelRatio","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","depthType","glDepthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","removed","added","connect","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","includes","getDepthInformation","isValid","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffsetUniform","boundary","chunkOffset","WebGLRenderer","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","forEach","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","Promise","resolve","checkMaterialsReady","setTimeout","setFromProjectionMatrix","projectObject","camera2","renderScene","onAfterRender","isLOD","intersectsSprite","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","seqWithValue","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","setOptional","boneTexture","computeBoneTexture","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","upload","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","setFromMatrixScale","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","addLevel","hysteresis","levelDistance","getObjectForDistance","raycast","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","bindMatrixInverse","applyBoneTransform","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","getComponent","boneIndex","bones","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","json","boneInverse","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","setMatrixAt","getMatrixAt","raycastTimes","instanceId","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix","_invMatrixWorld","_identityMatrix","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","setComponent","BatchedMesh","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","reference","attributeName","srcAttribute","dstAttribute","getIndex","idArray","batchGeometry","Boolean","func","getBoundingBoxAt","getBoundingSphereAt","indexCount","_initializeGeometry","_validateGeometry","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setX","setGeometryAt","dstIndex","srcIndex","posAttr","iv","setDrawRange","batchId","multiDrawStarts","multiDrawCounts","culled","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","distanceSqToSegment","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","CompressedTexture","CompressedArrayTexture","CompressedCubeTexture","isCompressedCubeTexture","CanvasTexture","isCanvasTexture","Curve","arcLengthDivisions","optionalTarget","getUtoTmapping","getPoint","divisions","getPointAt","lengths","getLengths","cacheArcLengths","current","last","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","t2","pt1","pt2","getTangent","segments","closed","binormals","vec","mat","getTangentAt","MAX_VALUE","makeRotationAxis","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","freeze","__proto__","CurvePath","curves","autoClose","curve","startPoint","endPoint","lineType","getLength","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","getPoints","fromJSON","Path","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","absarc","absellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","computeVertexNormals","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Shape","holes","holesPts","getPointsHoles","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","isClockWise","hl","ahole","triangulateShape","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","RawShaderMaterial","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","validate","optimize","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","reject","load","DEFAULT_MATERIAL_NAME","loading","HttpError","response","FileLoader","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","done","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","catch","finally","AnimationLoader","setPath","setRequestHeader","setWithCredentials","CompressedTextureLoader","setResponseType","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","setCrossOrigin","DataTextureLoader","texData","TextureLoader","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coeff","shBasis","LightProbe","MaterialLoader","getTexture","createMaterialFromType","materialLib","LoaderUtils","fromCharCode","decodeURIComponent","escape","lastIndexOf","InstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","extractUrlBase","loadAsync","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","setTextures","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","isImageBitmapLoader","createImageBitmap","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","destination","timeDelta","_clock","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setPosition","setOrientation","Audio","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","getFilters","setFilters","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","refDistance","rolloffFactor","distanceModel","maxDistance","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","targetObject","resolvedProperty","propertyIndex","dest","targetArray","sourceArray","objectName","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","matches","results","lastDot","substring","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","action","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","_id","UniformsGroup","isUniformsGroup","uniformsSource","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","coords","unproject","intersectObject","ascSort","Spherical","other","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","rotateY","GridHelper","PolarGridHelper","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","setFromObject","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","ch2","durl","URL","createObjectURL","Blob","cwk","Worker","revokeObjectURL","encodeURI","wk","msg","onerror","onmessage","postMessage","u8","u16","u32","fleb","fdeb","clim","freb","eb","_a","fl","revfl","_b","fd","revfd","rev","hMap","cd","mb","le","co","rvb","sv","r_1","flt","fdt","flm","flrm","fdm","fdrm","bits16","shft","slc","inflt","dat","buf","st","noBuf","noSt","cbuf","bl","nbuf","final","pos","bt","lm","dm","lbt","dbt","tbts","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","lms","dms","lpos","sym","dsym","wbits","wbits16","hTree","et","maxSym","tr","mbt","ln","lft","cst","i2_1","i2_2","i2_3","lc","cl","cli","cln","cls","clen","wfblk","out","wblk","syms","lf","li","dlt","mlb","ddt","mdb","_c","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","ftlen","dtlen","ll","dl","llm","lcts","it","clct","deo","dflt","lvl","plvl","pre","post","lst","opt","msk_1","head","bs1_1","bs2_1","hsh","lc_1","wi","hv","imod","pimod","rem","ch_1","dif","maxn","maxd","nl","mmd","md","ti","pti","lin","din","crct","crc","cr","adler","dopt","mem","mrg","wcln","fn","fnStr","td","ks","st_1","spInd","ch","cbfs","wrkr","fns","td_1","bInflt","inflateSync","pbf","gu8","bDflt","deflateSync","gze","gzh","gzhl","wbytes","guze","gzs","gzl","zle","zlh","zule","zlv","cbify","opts","terminate","consume","astrm","strm","ondata","ev","astrmify","b4","b8","filename","mtime","charCodeAt","flg","zs","lv","AsyncCmpStrm","Deflate","chunk","AsyncDeflate","deflate","Inflate","bts","AsyncInflate","inflate","Gzip","raw","AsyncGzip","gzip","gzipSync","Gunzip","AsyncGunzip","gunzip","gunzipSync","Zlib","AsyncZlib","zlib","zlibSync","Unzlib","AsyncUnzlib","unzlib","unzlibSync","Decompress","G","I","Z","_this_1","AsyncDecompress","decompress","decompressSync","fltn","TextEncoder","tds","dutf8","DecodeUTF8","np","EncodeUTF8","strToU8","str","latin1","ar_1","encode","ar","ai","strFromU8","ext","dbf","slzh","zh","fnl","es","z64e","sc","off","exfl","ex","wzh","extra","exl","os","flag","compression","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","attrs","exf","wzf","ZipPassThrough","process","ZipDeflate","AsyncZipDeflate","Zip","com","comment","header","chks","pAll","_i","chks_1","chk","ind","uf","nxt","dd","zip","tot","slft","term","tAll","cbf","oe","cdl","badd","loc","_loop_1","ms","cbl","zipSync","UnzipPassThrough","UnzipInflate","AsyncUnzipInflate","_","Unzip","onfile","toAdd","is","oc","_loop_2","sig","this_1","cmp_1","chks_2","sc_1","su_1","fn_1","d_1","file_1","ctr","chks_3","originalSize","state_1","register","unzip","_loop_3","c_1","no","infl","unzipSync","c_2","findSpan","U","calcBasisFunctions","span","saved","rv","temp","calcBSplinePoint","C","Nj","wNj","calcBasisFunctionDerivatives","zeroArr","ders","ndu","rk","pk","j1","j2","calcBSplineDerivatives","nd","du","CK","nders","Pw","calcKoverI","nom","calcRationalCurveDerivatives","Pders","Aders","wders","calcNURBSDerivatives","calcSurfacePoint","V","uspan","vspan","Nu","Nv","Sw","calcVolumePoint","W","wspan","Nw","NURBSCurve","degree","knots","controlPoints","startKnot","endKnot","hpoint","NURBSUtils","fbxTree","connections","sceneGraph","FBXLoader","FBXBuffer","isFbxFormatBinary","BinaryParser","FBXText","convertArrayBufferToString","isFbxFormatASCII","getFbxVersion","TextParser","textureLoader","FBXTreeParser","parseConnections","deformers","parseDeformers","geometryMap","GeometryParser","parseScene","connectionMap","rawConnections","Connections","rawConnection","fromID","toID","relationship","parents","parentRelationship","ID","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","RelativeFilename","Filename","arrayBufferContent","Content","base64Content","parseImage","content","fileName","textureMap","textureNodes","parseTexture","textureNode","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","valueV","Scaling","Translation","FileName","materialMap","materialNodes","parseMaterial","materialNode","ShadingModel","parseParameters","BumpFactor","Diffuse","DiffuseColor","DisplacementFactor","Emissive","EmissiveColor","EmissiveFactor","Opacity","ReflectionFactor","Shininess","Specular","SpecularColor","LayeredTexture","DeformerNodes","Deformer","deformerNode","relationships","attrType","parseSkeleton","geometryID","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","transformLink","TransformLink","Indexes","Weights","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","parentConnections","connection","bindSkeleton","addGlobalSceneSettings","transformData","parentMatrix","parentMatrixWorld","generateTransform","AnimationParser","buildSkeleton","createCamera","createLight","createMesh","createCurve","sanitizeNodeName","originalName","getTransformData","subBone","cameraAttribute","attr","NodeAttribute","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","innerWidth","innerHeight","AspectWidth","AspectHeight","FieldOfView","FocalLength","setFocalLength","lightAttribute","LightType","Intensity","CastLightOnObject","FarAttenuationEnd","EnableFarAttenuation","InnerAngle","OuterAngle","CastShadows","FBX_Deformer","normalizeSkinWeights","reduce","geo","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","Lcl_Rotation","postRotation","PostRotation","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","bindMatrices","parsePoseNodes","geoRelationships","geoConnParent","BindPoseNode","Pose","NbPoseNodes","poseNodes","PoseNode","poseNode","Matrix","GlobalSettings","ambientColor","AmbientColor","unitScaleFactor","UnitScaleFactor","negativeMaterialIndices","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","geoInfo","parseGeoNode","genBuffers","weightsIndices","vertexWeights","mappingType","prevMaterialIndex","currentIndex","lastGroup","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","UV","parseUVs","weightTable","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","getData","wt","wIndex","Weight","weightIndex","comparedWeight","comparedWeightIndex","comparedWeightArray","genFace","normalVector","getNormalNewell","bitangent","normalTangent","normalBitangent","getNormalTangentAndBitangent","triangulationInput","flattenVertex","parentGeo","parentGeoNode","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","Order","KnotVector","pointsValues","Form","animationClips","rawClips","parseClips","rawClip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","curveNode","rawCurves","animationCurve","KeyTime","convertFBXTimeToSeconds","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","modelID","rawModel","modelName","initialPosition","initialRotation","initialScale","deformerID","morpherID","morphName","rawStacks","AnimationStack","rawTracks","generateTracks","positionTrack","generateVectorTrack","R","rotationTrack","generateRotationTrack","S","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","interpolateRotations","quaternionValues","prevQuat","morphNum","getObjectByName","lastValue","prevValue","xIndex","yIndex","zIndex","xValue","yValue","zValue","curvex","curvey","curvez","initialValueRad","currentValueRad","valuesSpan","absoluteSpan","maxAbsSpan","numSubIntervals","E1","E2","Q1","Q2","initialTime","timeSpan","Q","E","nodeStack","currentIndent","currentProp","currentPropName","allNodes","FBXTree","matchComment","matchEmpty","matchBeginning","matchProperty","parseNodeBegin","parseNodeProperty","popStack","parseNodePropertyContinued","nodeAttrs","parseNodeAttr","currentNode","getCurrentNode","pushStack","contentLine","propName","propValue","parentName","parseNodeSpecialProperty","connProps","rest","elem","append","setCurrentProp","parseNumberArray","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","getPrevNode","BinaryReader","skip","getUint32","endOfContent","parseNode","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getInt16","arrayLength","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","fflate","reader2","littleEndian","dv","_textDecoder","nullByte","CORRECT","cursor","versionRegExp","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lParentLX","lGlobalT","makeRotationFromEuler","lLRM","lParentGRM","lParentTM","lParentGRSM","lParentGSM","lLSM","lGlobalRS","lParentLSM","lParentLSM_inv","lParentGSM_noLocal","lRotationPivotM_inv","lScalingPivotM_inv","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","_object_pattern","_material_library_pattern","_material_use_pattern","_map_use_pattern","_face_vertex_data_separator_pattern","_ab","_cb","ParserState","materialLibraries","startObject","fromDeclaration","previousMaterial","currentMaterial","_finalize","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","mtllib","groupEnd","cloned","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","parseNormalIndex","parseUVIndex","addVertexPoint","addVertexLine","addNormal","addFaceNormal","addColor","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ic","nLen","uvLen","addPointGeometry","vi","addLineGeometry","uvi","OBJLoader","trimStart","lineFirstChar","lineData","vertexData","faceVertices","vertexParts","lineParts","lineVertices","lineUVs","llen","pointData","hasPrimitives","hasVertexColors","createdMaterials","miLen","sourceMaterial","materialHash","materialLine","materialPoints","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","dep","Function","deps","some"],"mappings":"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","file":"script.5410202a.js","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '161';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0\n\t\t}, options );\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps;\n\t\tthis.texture.internalFormat = options.internalFormat;\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false, // set to use shader texture LOD\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // @deprecated, r159\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( range.start, range.start + range.count ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// @deprecated, r159\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.alphaToCoverage || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\t`;\n\n\tif ( parameters.isWebGL2 ) {\n\n\t\tprecisionstring += `precision ${parameters.precision} sampler3D;\n\t\tprecision ${parameters.precision} sampler2DArray;\n\t\tprecision ${parameters.precision} sampler2DShadow;\n\t\tprecision ${parameters.precision} samplerCubeShadow;\n\t\tprecision ${parameters.precision} sampler2DArrayShadow;\n\t\tprecision ${parameters.precision} isampler2D;\n\t\tprecision ${parameters.precision} isampler3D;\n\t\tprecision ${parameters.precision} isamplerCube;\n\t\tprecision ${parameters.precision} isampler2DArray;\n\t\tprecision ${parameters.precision} usampler2D;\n\t\tprecision ${parameters.precision} usampler3D;\n\t\tprecision ${parameters.precision} usamplerCube;\n\t\tprecision ${parameters.precision} usampler2DArray;\n\t\t`;\n\n\t}\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: HAS_EXTENSIONS && material.extensions.multiDraw === true && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 20 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true && glInternalFormat !== RGB_ETC1_Format );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = ( isWebGL2 === true ) ? _gl.DEPTH_COMPONENT24 : _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear != renderState.depthNear ) || ( depthData.depthFar != renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\trender( renderer, cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\textensions: { fragDepth: true },\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t\trenderer.render( this.mesh, cameraXR );\n\n\t\t}\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tcamera.near = depthSensing.depthNear;\n\t\t\t\tcamera.far = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t\tcameraL.near = _currentDepthNear;\n\t\t\t\tcameraL.far = _currentDepthFar;\n\t\t\t\tcameraR.near = _currentDepthNear;\n\t\t\t\tcameraR.far = _currentDepthFar;\n\n\t\t\t\tcameraL.updateProjectionMatrix();\n\t\t\t\tcameraR.updateProjectionMatrix();\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdepthSensing.render( renderer, cameraXR );\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tif ( xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false ) {\n\n\t\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new srcAttribute.constructor( dstArray, itemSize, normalized );\n\t\t\t\tdstAttribute.setUsage( srcAttribute.usage );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry atributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst active = this._active;\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _vector$5.distanceTo( _sphere$2.center );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement, sRGBEncoding };\n","\n\n\nclass Vector2 {\n\tx: number;\n\ty: number;\n\n\tconstructor(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\tdot(other) {\n\t\treturn this.x*other.x + this.y*other.y;\n\t}\n}\n\nfunction Shuffle(arrayToShuffle) {\n\tfor(let e = arrayToShuffle.length-1; e > 0; e--) {\n\t\tconst index = Math.round(Math.random()*(e-1));\n\t\tconst temp = arrayToShuffle[e];\n\t\t\n\t\tarrayToShuffle[e] = arrayToShuffle[index];\n\t\tarrayToShuffle[index] = temp;\n\t}\n}\n\nexport function genSeed(detail) {\n\tconst permutations = [];\n\tfor (let i = 0; i < detail; i++) {\n\n\t\tconst perm = [];\n\t\tfor(let i = 0; i < 256; i++) {\n\t\t\tperm.push(i);\n\t\t}\n\t\tShuffle(perm);\n\t\tfor(let i = 0; i < 256; i++) {\n\t\t\tperm.push(perm[i]);\n\t\t}\n\t\tpermutations.push(perm)\n\t}\n\treturn permutations;\n}\n\nfunction GetConstantVector(v) {\n\t// v is the value from the permutation table\n\tconst h = v & 3;\n\tif(h == 0)\n\t\treturn new Vector2(1.0, 1.0);\n\telse if(h == 1)\n\t\treturn new Vector2(-1.0, 1.0);\n\telse if(h == 2)\n\t\treturn new Vector2(-1.0, -1.0);\n\telse\n\t\treturn new Vector2(1.0, -1.0);\n}\n\nfunction Fade(t) {\n\treturn ((6*t - 15)*t + 10)*t*t*t;\n}\n\nfunction Lerp(t, a1, a2) {\n\treturn a1 + t*(a2-a1);\n}\n\n\nexport function Noise2D(x, y, perm) {\n\tconst X = Math.floor(x) & 255;\n\tconst Y = Math.floor(y) & 255;\n\n\tconst xf = x-Math.floor(x);\n\tconst yf = y-Math.floor(y);\n\n\tconst topRight = new Vector2(xf-1.0, yf-1.0);\n\tconst topLeft = new Vector2(xf, yf-1.0);\n\tconst bottomRight = new Vector2(xf-1.0, yf);\n\tconst bottomLeft = new Vector2(xf, yf);\n\t\n\t// Select a value from the permutation array for each of the 4 corners\n\tconst valueTopRight = perm[perm[X+1]+Y+1];\n\tconst valueTopLeft = perm[perm[X]+Y+1];\n\tconst valueBottomRight = perm[perm[X+1]+Y];\n\tconst valueBottomLeft = perm[perm[X]+Y];\n\t\n\tconst dotTopRight = topRight.dot(GetConstantVector(valueTopRight));\n\tconst dotTopLeft = topLeft.dot(GetConstantVector(valueTopLeft));\n\tconst dotBottomRight = bottomRight.dot(GetConstantVector(valueBottomRight));\n\tconst dotBottomLeft = bottomLeft.dot(GetConstantVector(valueBottomLeft));\n\t\n\tconst u = Fade(xf);\n\tconst v = Fade(yf);\n\t\n\treturn Lerp(u,\n\t\tLerp(v, dotBottomLeft, dotTopLeft),\n\t\tLerp(v, dotBottomRight, dotTopRight)\n\t); \n}\n\n\nexport function multiLayeredNoise(x, y, seed) {\n\n\tlet result = 0;\n\tlet tot = 0;\n\tfor(let i = 0; i < seed.length; i++) {\n\t\tlet x_p = x * 2**i;\n\t\tlet y_p = y * 2**i;\n\n\t\tresult += Noise2D(x_p, y_p, seed[i]) / (2.0**i);\n\t\ttot += 1.0 / (2.0**i);\n\t}\n\t\n\treturn (result/tot + 1) / (2.0);\n}\n","/*!\nfflate - fast JavaScript compression/decompression\n<https://101arrowz.github.io/fflate>\nLicensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE\nversion 0.6.9\n*/\n\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar durl = function (c) { return URL.createObjectURL(new Blob([c], { type: 'text/javascript' })); };\nvar cwk = function (u) { return new Worker(u); };\ntry {\n    URL.revokeObjectURL(durl(''));\n}\ncatch (e) {\n    // We're in Deno or a very old browser\n    durl = function (c) { return 'data:application/javascript;charset=UTF-8,' + encodeURI(c); };\n    // If Deno, this is necessary; if not, this changes nothing\n    cwk = function (u) { return new Worker(u, { type: 'module' }); };\n}\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = cwk(ch2[id] || (ch2[id] = durl(c)));\n    w.onerror = function (e) { return cb(e.error, null); };\n    w.onmessage = function (e) { return cb(null, e.data); };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i)\n        ++l[cd[i] - 1];\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p / 8) | 0) + (p & 7 && 1); };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && !st.l && sl < 5))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            st.f = final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                throw 'invalid block type';\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n            if (!c)\n                throw 'invalid length/literal';\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    throw 'invalid distance';\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e < s) {\n                // write full block\n                pos = wfblk(w, pos, dat.subarray(i, e));\n            }\n            else {\n                // write final block\n                w[i] = lst;\n                pos = wfblk(w, pos, dat.subarray(i, s));\n            }\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new u32(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && 0xEDB88320) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/ /g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k] instanceof u8 || v[k] instanceof u16 || v[k] instanceof u32)\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, hMap, max, bits, bits16, shft, slc, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (t)\n            throw 'stream finished';\n        if (!strm.ondata)\n            throw 'no stream handler';\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        throw 'invalid gzip data';\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        throw 'invalid zlib data';\n    if (d[1] & 32)\n        throw 'invalid zlib data: preset dictionaries not supported';\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                throw 'invalid gzip stream';\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                throw 'invalid zlib stream';\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no stream handler';\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k;\n        if (val instanceof u8)\n            t[n] = [val, o];\n        else if (Array.isArray(val))\n            t[n] = [val[0], mrg(o, val[1])];\n        else\n            fltn(val, n + '/', t, o);\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    throw 'invalid utf-8 data';\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            throw 'stream finished';\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                throw 'invalid utf-8 data';\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        if (this.d)\n            throw 'stream finished';\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            throw 'invalid utf-8 data';\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                throw 'extra field too long';\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c == null && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        throw 'date not in range 1980-2099';\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != null) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback - add to ZIP archive before pushing';\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (this.d & 2)\n            throw 'stream finished';\n        var f = strToU8(file.filename), fl = f.length;\n        var com = file.comment, o = com && strToU8(com);\n        var u = fl != file.filename.length || (o && (com.length != o.length));\n        var hl = fl + exfl(file.extra) + 30;\n        if (fl > 65535)\n            throw 'filename too long';\n        var header = new u8(hl);\n        wzh(header, 0, file, f, u);\n        var chks = [header];\n        var pAll = function () {\n            for (var _i = 0, chks_1 = chks; _i < chks_1.length; _i++) {\n                var chk = chks_1[_i];\n                _this_1.ondata(null, chk, false);\n            }\n            chks = [];\n        };\n        var tr = this.d;\n        this.d = 0;\n        var ind = this.u.length;\n        var uf = mrg(file, {\n            f: f,\n            u: u,\n            o: o,\n            t: function () {\n                if (file.terminate)\n                    file.terminate();\n            },\n            r: function () {\n                pAll();\n                if (tr) {\n                    var nxt = _this_1.u[ind + 1];\n                    if (nxt)\n                        nxt.r();\n                    else\n                        _this_1.d = 1;\n                }\n                tr = 1;\n            }\n        });\n        var cl = 0;\n        file.ondata = function (err, dat, final) {\n            if (err) {\n                _this_1.ondata(err, dat, final);\n                _this_1.terminate();\n            }\n            else {\n                cl += dat.length;\n                chks.push(dat);\n                if (final) {\n                    var dd = new u8(16);\n                    wbytes(dd, 0, 0x8074B50);\n                    wbytes(dd, 4, file.crc);\n                    wbytes(dd, 8, cl);\n                    wbytes(dd, 12, file.size);\n                    chks.push(dd);\n                    uf.c = cl, uf.b = hl + cl + 16, uf.crc = file.crc, uf.size = file.size;\n                    if (tr)\n                        uf.r();\n                    tr = 1;\n                }\n                else if (tr)\n                    pAll();\n            }\n        };\n        this.u.push(uf);\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            if (this.d & 1)\n                throw 'stream finishing';\n            throw 'stream finished';\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cb(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cb(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl('filename too long', null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            throw 'filename too long';\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, data, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            throw 'no callback';\n        if (!this.p)\n            throw 'stream finished';\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_2 = [];\n                        this_1.k.unshift(chks_2);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    throw 'no callback';\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        throw 'unknown compression type ' + cmp_1;\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_3 = chks_2; _i < chks_3.length; _i++) {\n                                        var dat = chks_3[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_2 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                throw 'invalid zip file';\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\n/**\n * Asynchronously decompresses a ZIP archive\n * @param data The raw compressed ZIP file\n * @param cb The callback to call with the decompressed files\n * @returns A function that can be used to immediately terminate the unzipping\n */\nexport function unzip(data, cb) {\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cb('invalid zip file', null);\n            return;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (!lft)\n        cb(null, {});\n    var c = lft;\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50) {\n            cb('invalid zip file', null);\n            return;\n        }\n        c = lft = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    var _loop_3 = function (i) {\n        var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                files[fn] = d;\n                if (!--lft)\n                    cb(null, files);\n            }\n        };\n        if (!c_1)\n            cbl(null, slc(data, b, b + sc));\n        else if (c_1 == 8) {\n            var infl = data.subarray(b, b + sc);\n            if (sc < 320000) {\n                try {\n                    cbl(null, inflateSync(infl, new u8(su)));\n                }\n                catch (e) {\n                    cbl(e, null);\n                }\n            }\n            else\n                term.push(inflate(infl, { size: su }, cbl));\n        }\n        else\n            cbl('unknown compression type ' + c_1, null);\n    };\n    for (var i = 0; i < c; ++i) {\n        _loop_3(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @returns The decompressed files\n */\nexport function unzipSync(data) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            throw 'invalid zip file';\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50)\n            throw 'invalid zip file';\n        c = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!c_2)\n            files[fn] = slc(data, b, b + sc);\n        else if (c_2 == 8)\n            files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n        else\n            throw 'unknown compression type ' + c_2;\n    }\n    return files;\n}\n","import {\n\tVector3,\n\tVector4\n} from 'three';\n\n/**\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n **/\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\n/*\nFinds knot vector span.\n\np : degree\nu : parametric value\nU : knot vector\n\nreturns the span\n*/\nfunction findSpan( p, u, U ) {\n\n\tconst n = U.length - p - 1;\n\n\tif ( u >= U[ n ] ) {\n\n\t\treturn n - 1;\n\n\t}\n\n\tif ( u <= U[ p ] ) {\n\n\t\treturn p;\n\n\t}\n\n\tlet low = p;\n\tlet high = n;\n\tlet mid = Math.floor( ( low + high ) / 2 );\n\n\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\tif ( u < U[ mid ] ) {\n\n\t\t\thigh = mid;\n\n\t\t} else {\n\n\t\t\tlow = mid;\n\n\t\t}\n\n\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t}\n\n\treturn mid;\n\n}\n\n\n/*\nCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nU    : knot vector\n\nreturns array[p+1] with basis functions values.\n*/\nfunction calcBasisFunctions( span, u, p, U ) {\n\n\tconst N = [];\n\tconst left = [];\n\tconst right = [];\n\tN[ 0 ] = 1.0;\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tconst temp = N[ r ] / ( rv + lv );\n\t\t\tN[ r ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tN[ j ] = saved;\n\n\t}\n\n\treturn N;\n\n}\n\n\n/*\nCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\np : degree of B-Spline\nU : knot vector\nP : control points (x, y, z, w)\nu : parametric point\n\nreturns point for given u\n*/\nfunction calcBSplinePoint( p, U, P, u ) {\n\n\tconst span = findSpan( p, u, U );\n\tconst N = calcBasisFunctions( span, u, p, U );\n\tconst C = new Vector4( 0, 0, 0, 0 );\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tconst point = P[ span - p + j ];\n\t\tconst Nj = N[ j ];\n\t\tconst wNj = point.w * Nj;\n\t\tC.x += point.x * wNj;\n\t\tC.y += point.y * wNj;\n\t\tC.z += point.z * wNj;\n\t\tC.w += point.w * Nj;\n\n\t}\n\n\treturn C;\n\n}\n\n\n/*\nCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nn    : number of derivatives to calculate\nU    : knot vector\n\nreturns array[n+1][p+1] with basis functions derivatives\n*/\nfunction calcBasisFunctionDerivatives( span, u, p, n, U ) {\n\n\tconst zeroArr = [];\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tzeroArr[ i ] = 0.0;\n\n\tconst ders = [];\n\n\tfor ( let i = 0; i <= n; ++ i )\n\t\tders[ i ] = zeroArr.slice( 0 );\n\n\tconst ndu = [];\n\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\tndu[ 0 ][ 0 ] = 1.0;\n\n\tconst left = zeroArr.slice( 0 );\n\tconst right = zeroArr.slice( 0 );\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\tconst temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tndu[ j ][ j ] = saved;\n\n\t}\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t}\n\n\tfor ( let r = 0; r <= p; ++ r ) {\n\n\t\tlet s1 = 0;\n\t\tlet s2 = 1;\n\n\t\tconst a = [];\n\t\tfor ( let i = 0; i <= p; ++ i ) {\n\n\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t}\n\n\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\t\tlet d = 0.0;\n\t\t\tconst rk = r - k;\n\t\t\tconst pk = p - k;\n\n\t\t\tif ( r >= k ) {\n\n\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t}\n\n\t\t\tconst j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\tconst j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\tfor ( let j = j1; j <= j2; ++ j ) {\n\n\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t}\n\n\t\t\tif ( r <= pk ) {\n\n\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t}\n\n\t\t\tders[ k ][ r ] = d;\n\n\t\t\tconst j = s1;\n\t\t\ts1 = s2;\n\t\t\ts2 = j;\n\n\t\t}\n\n\t}\n\n\tlet r = p;\n\n\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ k ][ j ] *= r;\n\n\t\t}\n\n\t\tr *= p - k;\n\n\t}\n\n\treturn ders;\n\n}\n\n\n/*\n\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points\n\tu  : Parametric points\n\tnd : number of derivatives\n\n\treturns array[d+1] with derivatives\n\t*/\nfunction calcBSplineDerivatives( p, U, P, u, nd ) {\n\n\tconst du = nd < p ? nd : p;\n\tconst CK = [];\n\tconst span = findSpan( p, u, U );\n\tconst nders = calcBasisFunctionDerivatives( span, u, p, du, U );\n\tconst Pw = [];\n\n\tfor ( let i = 0; i < P.length; ++ i ) {\n\n\t\tconst point = P[ i ].clone();\n\t\tconst w = point.w;\n\n\t\tpoint.x *= w;\n\t\tpoint.y *= w;\n\t\tpoint.z *= w;\n\n\t\tPw[ i ] = point;\n\n\t}\n\n\tfor ( let k = 0; k <= du; ++ k ) {\n\n\t\tconst point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = point;\n\n\t}\n\n\tfor ( let k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate \"K over I\"\n\nreturns k!/(i!(k-i)!)\n*/\nfunction calcKoverI( k, i ) {\n\n\tlet nom = 1;\n\n\tfor ( let j = 2; j <= k; ++ j ) {\n\n\t\tnom *= j;\n\n\t}\n\n\tlet denom = 1;\n\n\tfor ( let j = 2; j <= i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\tfor ( let j = 2; j <= k - i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\treturn nom / denom;\n\n}\n\n\n/*\nCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\nPders : result of function calcBSplineDerivatives\n\nreturns array with derivatives for rational curve.\n*/\nfunction calcRationalCurveDerivatives( Pders ) {\n\n\tconst nd = Pders.length;\n\tconst Aders = [];\n\tconst wders = [];\n\n\tfor ( let i = 0; i < nd; ++ i ) {\n\n\t\tconst point = Pders[ i ];\n\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\twders[ i ] = point.w;\n\n\t}\n\n\tconst CK = [];\n\n\tfor ( let k = 0; k < nd; ++ k ) {\n\n\t\tconst v = Aders[ k ].clone();\n\n\t\tfor ( let i = 1; i <= k; ++ i ) {\n\n\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\np  : degree\nU  : knot vector\nP  : control points in homogeneous space\nu  : parametric points\nnd : number of derivatives\n\nreturns array with derivatives.\n*/\nfunction calcNURBSDerivatives( p, U, P, u, nd ) {\n\n\tconst Pders = calcBSplineDerivatives( p, U, P, u, nd );\n\treturn calcRationalCurveDerivatives( Pders );\n\n}\n\n\n/*\nCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\np, q : degrees of B-Spline surface\nU, V : knot vectors\nP    : control points (x, y, z, w)\nu, v : parametric values\n\nreturns point for given (u, v)\n*/\nfunction calcSurfacePoint( p, q, U, V, P, u, v, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst temp = [];\n\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\tconst w = point.w;\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t}\n\n\t}\n\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\n/*\nCalculate rational B-Spline volume point. See The NURBS Book, page 134, algorithm A4.3.\n\np, q, r   : degrees of B-Splinevolume\nU, V, W   : knot vectors\nP         : control points (x, y, z, w)\nu, v, w   : parametric values\n\nreturns point for given (u, v, w)\n*/\nfunction calcVolumePoint( p, q, r, U, V, W, P, u, v, w, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst wspan = findSpan( r, w, W );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst Nw = calcBasisFunctions( wspan, w, r, W );\n\tconst temp = [];\n\n\tfor ( let m = 0; m <= r; ++ m ) {\n\n\t\ttemp[ m ] = [];\n\n\t\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\t\ttemp[ m ][ l ] = new Vector4( 0, 0, 0, 0 );\n\t\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ][ wspan - r + m ].clone();\n\t\t\t\tconst w = point.w;\n\t\t\t\tpoint.x *= w;\n\t\t\t\tpoint.y *= w;\n\t\t\t\tpoint.z *= w;\n\t\t\t\ttemp[ m ][ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let m = 0; m <= r; ++ m ) {\n\t\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\t\tSw.add( temp[ m ][ l ].multiplyScalar( Nw[ m ] ).multiplyScalar( Nv[ l ] ) );\n\n\t\t}\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\n\nexport {\n\tfindSpan,\n\tcalcBasisFunctions,\n\tcalcBSplinePoint,\n\tcalcBasisFunctionDerivatives,\n\tcalcBSplineDerivatives,\n\tcalcKoverI,\n\tcalcRationalCurveDerivatives,\n\tcalcNURBSDerivatives,\n\tcalcSurfacePoint,\n\tcalcVolumePoint,\n};\n","import {\n\tCurve,\n\tVector3,\n\tVector4\n} from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nclass NURBSCurve extends Curve {\n\n\tconstructor(\n\t\tdegree,\n\t\tknots /* array of reals */,\n\t\tcontrolPoints /* array of Vector(2|3|4) */,\n\t\tstartKnot /* index in knots */,\n\t\tendKnot /* index in knots */\n\t) {\n\n\t\tsuper();\n\n\t\tthis.degree = degree;\n\t\tthis.knots = knots;\n\t\tthis.controlPoints = [];\n\t\t// Used by periodic NURBS to remove hidden spans\n\t\tthis.startKnot = startKnot || 0;\n\t\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\n\t\tfor ( let i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t\t// ensure Vector4 for control points\n\t\t\tconst point = controlPoints[ i ];\n\t\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t\t}\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t\t// following results in (wx, wy, wz, w) homogeneous point\n\t\tconst hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\t\tif ( hpoint.w !== 1.0 ) {\n\n\t\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\t\thpoint.divideScalar( hpoint.w );\n\n\t\t}\n\n\t\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\tconst tangent = optionalTarget;\n\n\t\tconst u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\t\tconst ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\t\ttangent.copy( ders[ 1 ] ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n}\n\nexport { NURBSCurve };\n","import {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector2,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack,\n\tSRGBColorSpace,\n\tShapeUtils\n} from 'three';\nimport * as fflate from '../libs/fflate.module.js';\nimport { NURBSCurve } from '../curves/NURBSCurve.js';\n\n/**\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * Binary format specification:\n *\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\n\nlet fbxTree;\nlet connections;\nlet sceneGraph;\n\nclass FBXLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( buffer, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( FBXBuffer, path ) {\n\n\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t} else {\n\n\t\t\tconst FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t}\n\n\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t}\n\n\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t}\n\n\t\t// console.log( fbxTree );\n\n\t\tconst textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t}\n\n}\n\n// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\nclass FBXTreeParser {\n\n\tconstructor( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tparse() {\n\n\t\tconnections = this.parseConnections();\n\n\t\tconst images = this.parseImages();\n\t\tconst textures = this.parseTextures( images );\n\t\tconst materials = this.parseMaterials( textures );\n\t\tconst deformers = this.parseDeformers();\n\t\tconst geometryMap = new GeometryParser().parse( deformers );\n\n\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\treturn sceneGraph;\n\n\t}\n\n\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t// and details the connection type\n\tparseConnections() {\n\n\t\tconst connectionMap = new Map();\n\n\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\tconst rawConnections = fbxTree.Connections.connections;\n\n\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\tconst fromID = rawConnection[ 0 ];\n\t\t\t\tconst toID = rawConnection[ 1 ];\n\t\t\t\tconst relationship = rawConnection[ 2 ];\n\n\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn connectionMap;\n\n\t}\n\n\t// Parse FBXTree.Objects.Video for embedded image data\n\t// These images are connected to textures in FBXTree.Objects.Textures\n\t// via FBXTree.Connections.\n\tparseImages() {\n\n\t\tconst images = {};\n\t\tconst blobs = {};\n\n\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\tconst videoNodes = fbxTree.Objects.Video;\n\n\t\t\tfor ( const nodeID in videoNodes ) {\n\n\t\t\t\tconst videoNode = videoNodes[ nodeID ];\n\n\t\t\t\tconst id = parseInt( nodeID );\n\n\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\tconst arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\tconst base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\tconst image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( const id in images ) {\n\n\t\t\tconst filename = images[ id ];\n\n\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\t// Parse embedded image data in FBXTree.Video.Content\n\tparseImage( videoNode ) {\n\n\t\tconst content = videoNode.Content;\n\t\tconst fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\tconst extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\tlet type;\n\n\t\tswitch ( extension ) {\n\n\t\t\tcase 'bmp':\n\n\t\t\t\ttype = 'image/bmp';\n\t\t\t\tbreak;\n\n\t\t\tcase 'jpg':\n\t\t\tcase 'jpeg':\n\n\t\t\t\ttype = 'image/jpeg';\n\t\t\t\tbreak;\n\n\t\t\tcase 'png':\n\n\t\t\t\ttype = 'image/png';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tif':\n\n\t\t\t\ttype = 'image/tiff';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tga':\n\n\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t}\n\n\t\t\t\ttype = 'image/tga';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\treturn;\n\n\t\t}\n\n\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t} else { // Binary Format\n\n\t\t\tconst array = new Uint8Array( content );\n\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t}\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Texture\n\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t// to images in FBXTree.Objects.Video\n\tparseTextures( images ) {\n\n\t\tconst textureMap = new Map();\n\n\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\tconst textureNodes = fbxTree.Objects.Texture;\n\t\t\tfor ( const nodeID in textureNodes ) {\n\n\t\t\t\tconst texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textureMap;\n\n\t}\n\n\t// Parse individual node in FBXTree.Objects.Texture\n\tparseTexture( textureNode, images ) {\n\n\t\tconst texture = this.loadTexture( textureNode, images );\n\n\t\ttexture.ID = textureNode.id;\n\n\t\ttexture.name = textureNode.attrName;\n\n\t\tconst wrapModeU = textureNode.WrapModeU;\n\t\tconst wrapModeV = textureNode.WrapModeV;\n\n\t\tconst valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\tconst valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t// 0: repeat(default), 1: clamp\n\n\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\tconst values = textureNode.Scaling.value;\n\n\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t}\n\n\t\tif ( 'Translation' in textureNode ) {\n\n\t\t\tconst values = textureNode.Translation.value;\n\n\t\t\ttexture.offset.x = values[ 0 ];\n\t\t\ttexture.offset.y = values[ 1 ];\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\tloadTexture( textureNode, images ) {\n\n\t\tlet fileName;\n\n\t\tconst currentPath = this.textureLoader.path;\n\n\t\tconst children = connections.get( textureNode.id ).children;\n\n\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet texture;\n\n\t\tconst extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\tif ( extension === 'tga' ) {\n\n\t\t\tconst loader = this.manager.getHandler( '.tga' );\n\n\t\t\tif ( loader === null ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\tloader.setPath( this.textureLoader.path );\n\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t}\n\n\t\t} else if ( extension === 'dds' ) {\n\n\t\t\tconst loader = this.manager.getHandler( '.dds' );\n\n\t\t\tif ( loader === null ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: DDS loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\tloader.setPath( this.textureLoader.path );\n\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t}\n\n\t\t} else if ( extension === 'psd' ) {\n\n\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\ttexture = new Texture();\n\n\t\t} else {\n\n\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t}\n\n\t\tthis.textureLoader.setPath( currentPath );\n\n\t\treturn texture;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Material\n\tparseMaterials( textureMap ) {\n\n\t\tconst materialMap = new Map();\n\n\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\tconst materialNodes = fbxTree.Objects.Material;\n\n\t\t\tfor ( const nodeID in materialNodes ) {\n\n\t\t\t\tconst material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materialMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Material\n\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t// FBX format currently only supports Lambert and Phong shading models\n\tparseMaterial( materialNode, textureMap ) {\n\n\t\tconst ID = materialNode.id;\n\t\tconst name = materialNode.attrName;\n\t\tlet type = materialNode.ShadingModel;\n\n\t\t// Case where FBX wraps shading model in property object.\n\t\tif ( typeof type === 'object' ) {\n\n\t\t\ttype = type.value;\n\n\t\t}\n\n\t\t// Ignore unused materials which don't have any connections.\n\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\tconst parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\tlet material;\n\n\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\tcase 'phong':\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\t\t\tcase 'lambert':\n\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tmaterial.setValues( parameters );\n\t\tmaterial.name = name;\n\n\t\treturn material;\n\n\t}\n\n\t// Parse FBX material and return parameters suitable for a three.js material\n\t// Also parse the texture map and return any textures associated with the material\n\tparseParameters( materialNode, textureMap, ID ) {\n\n\t\tconst parameters = {};\n\n\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Diffuse ) {\n\n\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.DiffuseColor && ( materialNode.DiffuseColor.type === 'Color' || materialNode.DiffuseColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Emissive ) {\n\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.EmissiveColor && ( materialNode.EmissiveColor.type === 'Color' || materialNode.EmissiveColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t}\n\n\t\tif ( materialNode.Opacity ) {\n\n\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t}\n\n\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\tparameters.transparent = true;\n\n\t\t}\n\n\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Shininess ) {\n\n\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t}\n\n\t\tif ( materialNode.Specular ) {\n\n\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tconst scope = this;\n\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\tconst type = child.relationship;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'Bump':\n\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DiffuseColor':\n\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.map !== undefined ) {\n\n\t\t\t\t\t\tparameters.map.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.emissiveMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.emissiveMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NormalMap':\n\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.envMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.specularMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.specularMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TransparentColor':\n\t\t\t\tcase 'TransparencyFactor':\n\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientColor':\n\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn parameters;\n\n\t}\n\n\t// get a texture from the textureMap for use by a material.\n\tgetTexture( textureMap, id ) {\n\n\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t}\n\n\t\treturn textureMap.get( id );\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Deformer\n\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\tparseDeformers() {\n\n\t\tconst skeletons = {};\n\t\tconst morphTargets = {};\n\n\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\tconst DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\tfor ( const nodeID in DeformerNodes ) {\n\n\t\t\t\tconst deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\tconst skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\tconst morphTarget = {\n\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t};\n\n\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tskeletons: skeletons,\n\t\t\tmorphTargets: morphTargets,\n\n\t\t};\n\n\t}\n\n\t// Parse single nodes in FBXTree.Objects.Deformer\n\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t// Each skin node represents a skeleton and each cluster node represents a bone\n\tparseSkeleton( relationships, deformerNodes ) {\n\n\t\tconst rawBones = [];\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst boneNode = deformerNodes[ child.ID ];\n\n\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\tconst rawBone = {\n\n\t\t\t\tID: child.ID,\n\t\t\t\tindices: [],\n\t\t\t\tweights: [],\n\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t};\n\n\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t}\n\n\t\t\trawBones.push( rawBone );\n\n\t\t} );\n\n\t\treturn {\n\n\t\t\trawBones: rawBones,\n\t\t\tbones: []\n\n\t\t};\n\n\t}\n\n\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\tparseMorphTargets( relationships, deformerNodes ) {\n\n\t\tconst rawMorphTargets = [];\n\n\t\tfor ( let i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\tconst child = relationships.children[ i ];\n\n\t\t\tconst morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\tconst rawMorphTarget = {\n\n\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\tid: morphTargetNode.id,\n\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t};\n\n\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t} )[ 0 ].ID;\n\n\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t}\n\n\t\treturn rawMorphTargets;\n\n\t}\n\n\t// create the main Group() to be returned by the loader\n\tparseScene( deformers, geometryMap, materialMap ) {\n\n\t\tsceneGraph = new Group();\n\n\t\tconst modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tconst scope = this;\n\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\tconst modelNode = modelNodes[ model.ID ];\n\t\t\tscope.setLookAtProperties( model, modelNode );\n\n\t\t\tconst parentConnections = connections.get( model.ID ).parents;\n\n\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\tconst parent = modelMap.get( connection.ID );\n\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t} );\n\n\t\t\tif ( model.parent === null ) {\n\n\t\t\t\tsceneGraph.add( model );\n\n\t\t\t}\n\n\n\t\t} );\n\n\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\tthis.addGlobalSceneSettings();\n\n\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\tif ( node.parent ) {\n\n\t\t\t\t\tnode.userData.transformData.parentMatrix = node.parent.matrix;\n\t\t\t\t\tnode.userData.transformData.parentMatrixWorld = node.parent.matrixWorld;\n\n\t\t\t\t}\n\n\t\t\t\tconst transform = generateTransform( node.userData.transformData );\n\n\t\t\t\tnode.applyMatrix4( transform );\n\t\t\t\tnode.updateWorldMatrix();\n\n\t\t\t}\n\n\t\t} );\n\n\t\tconst animations = new AnimationParser().parse();\n\n\t\t// if all the models where already combined in a single group, just return that\n\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t}\n\n\t\tsceneGraph.animations = animations;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.Model\n\tparseModels( skeletons, geometryMap, materialMap ) {\n\n\t\tconst modelMap = new Map();\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tfor ( const nodeID in modelNodes ) {\n\n\t\t\tconst id = parseInt( nodeID );\n\t\t\tconst node = modelNodes[ nodeID ];\n\t\t\tconst relationships = connections.get( id );\n\n\t\t\tlet model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\tif ( ! model ) {\n\n\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Null':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\t\t\t\tmodel.userData.originalName = node.attrName;\n\n\t\t\t\tmodel.ID = id;\n\n\t\t\t}\n\n\t\t\tthis.getTransformData( model, node );\n\t\t\tmodelMap.set( id, model );\n\n\t\t}\n\n\t\treturn modelMap;\n\n\t}\n\n\tbuildSkeleton( relationships, skeletons, id, name ) {\n\n\t\tlet bone = null;\n\n\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\tfor ( const ID in skeletons ) {\n\n\t\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\tconst subBone = bone;\n\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\tbone.userData.originalName = name;\n\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn bone;\n\n\t}\n\n\t// create a PerspectiveCamera or OrthographicCamera\n\tcreateCamera( relationships ) {\n\n\t\tlet model;\n\t\tlet cameraAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tcameraAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type = 0;\n\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\ttype = 1;\n\n\t\t\t}\n\n\t\t\tlet nearClippingPlane = 1;\n\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t}\n\n\t\t\tlet farClippingPlane = 1000;\n\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t}\n\n\n\t\t\tlet width = window.innerWidth;\n\t\t\tlet height = window.innerHeight;\n\n\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t}\n\n\t\t\tconst aspect = width / height;\n\n\t\t\tlet fov = 45;\n\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t}\n\n\t\t\tconst focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Perspective\n\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\t// Create a DirectionalLight, PointLight or SpotLight\n\tcreateLight( relationships ) {\n\n\t\tlet model;\n\t\tlet lightAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tlightAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( lightAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type;\n\n\t\t\t// LightType can be undefined for Point lights\n\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\ttype = 0;\n\n\t\t\t} else {\n\n\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t}\n\n\t\t\tlet color = 0xffffff;\n\n\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value ).convertSRGBToLinear();\n\n\t\t\t}\n\n\t\t\tlet intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t// light disabled\n\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\tintensity = 0;\n\n\t\t\t}\n\n\t\t\tlet distance = 0;\n\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\tdistance = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\tconst decay = 1;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Point\n\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Directional\n\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // Spot\n\t\t\t\t\tlet angle = Math.PI / 3;\n\n\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet penumbra = 0;\n\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\tmodel.castShadow = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateMesh( relationships, geometryMap, materialMap ) {\n\n\t\tlet model;\n\t\tlet geometry = null;\n\t\tlet material = null;\n\t\tconst materials = [];\n\n\t\t// get geometry and materials(s) from connections\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t}\n\n\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( materials.length > 1 ) {\n\n\t\t\tmaterial = materials;\n\n\t\t} else if ( materials.length > 0 ) {\n\n\t\t\tmaterial = materials[ 0 ];\n\n\t\t} else {\n\n\t\t\tmaterial = new MeshPhongMaterial( {\n\t\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\t\tcolor: 0xcccccc\n\t\t\t} );\n\t\t\tmaterials.push( material );\n\n\t\t}\n\n\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\tmodel.normalizeSkinWeights();\n\n\t\t} else {\n\n\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateCurve( relationships, geometryMap ) {\n\n\t\tconst geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\treturn geo;\n\n\t\t}, null );\n\n\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\tconst material = new LineBasicMaterial( {\n\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\tcolor: 0x3300ff,\n\t\t\tlinewidth: 1\n\t\t} );\n\t\treturn new Line( geometry, material );\n\n\t}\n\n\t// parse the model node for transform data\n\tgetTransformData( model, modelNode ) {\n\n\t\tconst transformData = {};\n\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\tmodel.userData.transformData = transformData;\n\n\t}\n\n\tsetLookAtProperties( model, modelNode ) {\n\n\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\tconst children = connections.get( model.ID ).children;\n\n\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\tconst lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\tconst pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tbindSkeleton( skeletons, geometryMap, modelMap ) {\n\n\t\tconst bindMatrices = this.parsePoseNodes();\n\n\t\tfor ( const ID in skeletons ) {\n\n\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\tconst parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\tconst geoID = parent.ID;\n\t\t\t\t\tconst geoRelationships = connections.get( geoID );\n\n\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\tconst model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tparsePoseNodes() {\n\n\t\tconst bindMatrices = {};\n\n\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\tconst BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\tfor ( const nodeID in BindPoseNode ) {\n\n\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' && BindPoseNode[ nodeID ].NbPoseNodes > 0 ) {\n\n\t\t\t\t\tconst poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bindMatrices;\n\n\t}\n\n\taddGlobalSceneSettings() {\n\n\t\tif ( 'GlobalSettings' in fbxTree ) {\n\n\t\t\tif ( 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\t// Parse ambient color - if it's not set to black (default), create an ambient light\n\n\t\t\t\tconst ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tconst r = ambientColor[ 0 ];\n\t\t\t\tconst g = ambientColor[ 1 ];\n\t\t\t\tconst b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tconst color = new Color( r, g, b ).convertSRGBToLinear();\n\t\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( 'UnitScaleFactor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tsceneGraph.userData.unitScaleFactor = fbxTree.GlobalSettings.UnitScaleFactor.value;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n// parse Geometry data from FBXTree and return map of BufferGeometries\nclass GeometryParser {\n\n\tconstructor() {\n\n\t\tthis.negativeMaterialIndices = false;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Geometry\n\tparse( deformers ) {\n\n\t\tconst geometryMap = new Map();\n\n\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\tconst geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\tfor ( const nodeID in geoNodes ) {\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\tconst geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// report warnings\n\n\t\tif ( this.negativeMaterialIndices === true ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected.' );\n\n\t\t}\n\n\t\treturn geometryMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Geometry\n\tparseGeometry( relationships, geoNode, deformers ) {\n\n\t\tswitch ( geoNode.attrType ) {\n\n\t\t\tcase 'Mesh':\n\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\tbreak;\n\n\t\t\tcase 'NurbsCurve':\n\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\tparseMeshGeometry( relationships, geoNode, deformers ) {\n\n\t\tconst skeletons = deformers.skeletons;\n\t\tconst morphTargets = [];\n\n\t\tconst modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t} );\n\n\t\t// don't create geometry if it is not associated with any models\n\t\tif ( modelNodes.length === 0 ) return;\n\n\t\tconst skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\treturn skeleton;\n\n\t\t}, null );\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\t// Assume one model and get the preRotation from that\n\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\tconst modelNode = modelNodes[ 0 ];\n\n\t\tconst transformData = {};\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\tconst transform = generateTransform( transformData );\n\n\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t}\n\n\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\tgenGeometry( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\tconst geo = new BufferGeometry();\n\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\tconst geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\tconst buffers = this.genBuffers( geoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t}\n\n\t\tif ( skeleton ) {\n\n\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t// used later to bind the skeleton to the model\n\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t}\n\n\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\tconst normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t}\n\n\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\tconst name = i === 0 ? 'uv' : `uv${ i }`;\n\n\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t} );\n\n\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\tlet prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\tlet startIndex = 0;\n\n\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\tconst lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\tconst lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t// using one of them\n\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\treturn geo;\n\n\t}\n\n\tparseGeoNode( geoNode, skeleton ) {\n\n\t\tconst geoInfo = {};\n\n\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\tgeoInfo.uv = [];\n\n\t\t\tlet i = 0;\n\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeoInfo.weightTable = {};\n\n\t\tif ( skeleton !== null ) {\n\n\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn geoInfo;\n\n\t}\n\n\tgenBuffers( geoInfo ) {\n\n\t\tconst buffers = {\n\t\t\tvertex: [],\n\t\t\tnormal: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\t\t\tmaterialIndex: [],\n\t\t\tvertexWeights: [],\n\t\t\tweightsIndices: [],\n\t\t};\n\n\t\tlet polygonIndex = 0;\n\t\tlet faceLength = 0;\n\t\tlet displayedWeightsWarning = false;\n\n\t\t// these will hold data for a single face\n\t\tlet facePositionIndexes = [];\n\t\tlet faceNormals = [];\n\t\tlet faceColors = [];\n\t\tlet faceUVs = [];\n\t\tlet faceWeights = [];\n\t\tlet faceWeightIndices = [];\n\n\t\tconst scope = this;\n\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\tlet materialIndex;\n\t\t\tlet endOfFace = false;\n\n\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t// A cube with quad faces looks like this:\n\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t//  }\n\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\tendOfFace = true;\n\n\t\t\t}\n\n\t\t\tlet weightIndices = [];\n\t\t\tlet weights = [];\n\n\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t} );\n\n\n\t\t\t\t}\n\n\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\tconst Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\tlet currentWeight = weight;\n\t\t\t\t\t\tlet currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\tconst tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\tweights = Weight;\n\n\t\t\t\t}\n\n\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tmaterialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\tif ( materialIndex < 0 ) {\n\n\t\t\t\t\tscope.negativeMaterialIndices = true;\n\t\t\t\t\tmaterialIndex = 0; // fallback\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfaceLength ++;\n\n\t\t\tif ( endOfFace ) {\n\n\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\tpolygonIndex ++;\n\t\t\t\tfaceLength = 0;\n\n\t\t\t\t// reset arrays for the next face\n\t\t\t\tfacePositionIndexes = [];\n\t\t\t\tfaceNormals = [];\n\t\t\t\tfaceColors = [];\n\t\t\t\tfaceUVs = [];\n\t\t\t\tfaceWeights = [];\n\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn buffers;\n\n\t}\n\n\t// See https://www.khronos.org/opengl/wiki/Calculating_a_Surface_Normal\n\tgetNormalNewell( vertices ) {\n\n\t\tconst normal = new Vector3( 0.0, 0.0, 0.0 );\n\n\t\tfor ( let i = 0; i < vertices.length; i ++ ) {\n\n\t\t\tconst current = vertices[ i ];\n\t\t\tconst next = vertices[ ( i + 1 ) % vertices.length ];\n\n\t\t\tnormal.x += ( current.y - next.y ) * ( current.z + next.z );\n\t\t\tnormal.y += ( current.z - next.z ) * ( current.x + next.x );\n\t\t\tnormal.z += ( current.x - next.x ) * ( current.y + next.y );\n\n\t\t}\n\n\t\tnormal.normalize();\n\n\t\treturn normal;\n\n\t}\n\n\tgetNormalTangentAndBitangent( vertices ) {\n\n\t\tconst normalVector = this.getNormalNewell( vertices );\n\t\t// Avoid up being equal or almost equal to normalVector\n\t\tconst up = Math.abs( normalVector.z ) > 0.5 ? new Vector3( 0.0, 1.0, 0.0 ) : new Vector3( 0.0, 0.0, 1.0 );\n\t\tconst tangent = up.cross( normalVector ).normalize();\n\t\tconst bitangent = normalVector.clone().cross( tangent ).normalize();\n\n\t\treturn {\n\t\t\tnormal: normalVector,\n\t\t\ttangent: tangent,\n\t\t\tbitangent: bitangent\n\t\t};\n\n\t}\n\n\tflattenVertex( vertex, normalTangent, normalBitangent ) {\n\n\t\treturn new Vector2(\n\t\t\tvertex.dot( normalTangent ),\n\t\t\tvertex.dot( normalBitangent )\n\t\t);\n\n\t}\n\n\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\tgenFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\tlet triangles;\n\n\t\tif ( faceLength > 3 ) {\n\n\t\t\t// Triangulate n-gon using earcut\n\n\t\t\tconst vertices = [];\n\n\t\t\tfor ( let i = 0; i < facePositionIndexes.length; i += 3 ) {\n\n\t\t\t\tvertices.push( new Vector3(\n\t\t\t\t\tgeoInfo.vertexPositions[ facePositionIndexes[ i ] ],\n\t\t\t\t\tgeoInfo.vertexPositions[ facePositionIndexes[ i + 1 ] ],\n\t\t\t\t\tgeoInfo.vertexPositions[ facePositionIndexes[ i + 2 ] ]\n\t\t\t\t) );\n\n\t\t\t}\n\n\t\t\tconst { tangent, bitangent } = this.getNormalTangentAndBitangent( vertices );\n\t\t\tconst triangulationInput = [];\n\n\t\t\tfor ( const vertex of vertices ) {\n\n\t\t\t\ttriangulationInput.push( this.flattenVertex( vertex, tangent, bitangent ) );\n\n\t\t\t}\n\n\t\t\ttriangles = ShapeUtils.triangulateShape( triangulationInput, [] );\n\n\t\t} else {\n\n\t\t\t// Regular triangle, skip earcut triangulation step\n\t\t\ttriangles = [[ 0, 1, 2 ]];\n\n\t\t}\n\n\t\tfor ( const [ i0, i1, i2 ] of triangles ) {\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 + 2 ] ] );\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 3 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i0 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i0 * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i1 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i1 * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i2 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i2 * 2 + 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\taddMorphTargets( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\tif ( morphTargets.length === 0 ) return;\n\n\t\tparentGeo.morphTargetsRelative = true;\n\n\t\tparentGeo.morphAttributes.position = [];\n\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\tconst scope = this;\n\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\tconst morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\tgenMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\tconst vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\tconst morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\tconst indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\tconst length = parentGeo.attributes.position.count * 3;\n\t\tconst morphPositions = new Float32Array( length );\n\n\t\tfor ( let i = 0; i < indices.length; i ++ ) {\n\n\t\t\tconst morphIndex = indices[ i ] * 3;\n\n\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t}\n\n\t\t// TODO: add morph normal support\n\t\tconst morphGeoInfo = {\n\t\t\tvertexIndices: vertexIndices,\n\t\t\tvertexPositions: morphPositions,\n\n\t\t};\n\n\t\tconst morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t}\n\n\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\tparseNormals( NormalNode ) {\n\n\t\tconst mappingType = NormalNode.MappingInformationType;\n\t\tconst referenceType = NormalNode.ReferenceInformationType;\n\t\tconst buffer = NormalNode.Normals.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 3,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\tparseUVs( UVNode ) {\n\n\t\tconst mappingType = UVNode.MappingInformationType;\n\t\tconst referenceType = UVNode.ReferenceInformationType;\n\t\tconst buffer = UVNode.UV.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 2,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\tparseVertexColors( ColorNode ) {\n\n\t\tconst mappingType = ColorNode.MappingInformationType;\n\t\tconst referenceType = ColorNode.ReferenceInformationType;\n\t\tconst buffer = ColorNode.Colors.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t}\n\n\t\tfor ( let i = 0, c = new Color(); i < buffer.length; i += 4 ) {\n\n\t\t\tc.fromArray( buffer, i ).convertSRGBToLinear().toArray( buffer, i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 4,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\tparseMaterialIndices( MaterialNode ) {\n\n\t\tconst mappingType = MaterialNode.MappingInformationType;\n\t\tconst referenceType = MaterialNode.ReferenceInformationType;\n\n\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: [ 0 ],\n\t\t\t\tindices: [ 0 ],\n\t\t\t\tmappingType: 'AllSame',\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t}\n\n\t\tconst materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t// for conforming with the other functions we've written for other data.\n\t\tconst materialIndices = [];\n\n\t\tfor ( let i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\tmaterialIndices.push( i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 1,\n\t\t\tbuffer: materialIndexBuffer,\n\t\t\tindices: materialIndices,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\tparseNurbsGeometry( geoNode ) {\n\n\t\tconst order = parseInt( geoNode.Order );\n\n\t\tif ( isNaN( order ) ) {\n\n\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst degree = order - 1;\n\n\t\tconst knots = geoNode.KnotVector.a;\n\t\tconst controlPoints = [];\n\t\tconst pointsValues = geoNode.Points.a;\n\n\t\tfor ( let i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t}\n\n\t\tlet startKnot, endKnot;\n\n\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\tstartKnot = degree;\n\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\tfor ( let i = 0; i < degree; ++ i ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\tconst points = curve.getPoints( controlPoints.length * 12 );\n\n\t\treturn new BufferGeometry().setFromPoints( points );\n\n\t}\n\n}\n\n// parse animation data from FBXTree\nclass AnimationParser {\n\n\t// take raw animation clips and turn them into three.js animation clips\n\tparse() {\n\n\t\tconst animationClips = [];\n\n\t\tconst rawClips = this.parseClips();\n\n\t\tif ( rawClips !== undefined ) {\n\n\t\t\tfor ( const key in rawClips ) {\n\n\t\t\t\tconst rawClip = rawClips[ key ];\n\n\t\t\t\tconst clip = this.addClip( rawClip );\n\n\t\t\t\tanimationClips.push( clip );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animationClips;\n\n\t}\n\n\tparseClips() {\n\n\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t// if this is undefined we can safely assume there are no animations\n\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\tconst curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\tconst layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\tconst rawClips = this.parseAnimStacks( layersMap );\n\n\t\treturn rawClips;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t// and is referenced by an AnimationLayer\n\tparseAnimationCurveNodes() {\n\n\t\tconst rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\tconst curveNodesMap = new Map();\n\n\t\tfor ( const nodeID in rawCurveNodes ) {\n\n\t\t\tconst rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\tconst curveNode = {\n\n\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\tcurves: {},\n\n\t\t\t\t};\n\n\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn curveNodesMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t// axis ( e.g. times and values of x rotation)\n\tparseAnimationCurves( curveNodesMap ) {\n\n\t\tconst rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t// clearly, this should be optimised to\n\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\tfor ( const nodeID in rawCurves ) {\n\n\t\t\tconst animationCurve = {\n\n\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t};\n\n\t\t\tconst relationships = connections.get( animationCurve.id );\n\n\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\tconst animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\tconst animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\tparseAnimationLayers( curveNodesMap ) {\n\n\t\tconst rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\tconst layersMap = new Map();\n\n\t\tfor ( const nodeID in rawLayers ) {\n\n\t\t\tconst layerCurveNodes = [];\n\n\t\t\tconst connection = connections.get( parseInt( nodeID ) );\n\n\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\tconst children = connection.children;\n\n\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\tconst curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\n\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\tconst geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\tconst modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn layersMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\tparseAnimStacks( layersMap ) {\n\n\t\tconst rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t// connect the stacks (clips) up to the layers\n\t\tconst rawClips = {};\n\n\t\tfor ( const nodeID in rawStacks ) {\n\n\t\t\tconst children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t}\n\n\t\t\tconst layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\tlayer: layer,\n\n\t\t\t};\n\n\t\t}\n\n\t\treturn rawClips;\n\n\t}\n\n\taddClip( rawClip ) {\n\n\t\tlet tracks = [];\n\n\t\tconst scope = this;\n\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\n\n\t\t} );\n\n\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t}\n\n\tgenerateTracks( rawTracks ) {\n\n\t\tconst tracks = [];\n\n\t\tlet initialPosition = new Vector3();\n\t\tlet initialScale = new Vector3();\n\n\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, new Quaternion(), initialScale );\n\n\t\tinitialPosition = initialPosition.toArray();\n\t\tinitialScale = initialScale.toArray();\n\n\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\tconst positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\tconst rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\tconst scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\tconst morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t}\n\n\t\treturn tracks;\n\n\t}\n\n\tgenerateVectorTrack( modelName, curves, initialValue, type ) {\n\n\t\tconst times = this.getTimesForAllAxes( curves );\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t}\n\n\tgenerateRotationTrack( modelName, curves, preRotation, postRotation, eulerOrder ) {\n\n\t\tlet times;\n\t\tlet values;\n\n\t\tif ( curves.x !== undefined && curves.y !== undefined && curves.z !== undefined ) {\n\n\t\t\tconst result = this.interpolateRotations( curves.x, curves.y, curves.z, eulerOrder );\n\n\t\t\ttimes = result[ 0 ];\n\t\t\tvalues = result[ 1 ];\n\n\t\t}\n\n\t\tif ( preRotation !== undefined ) {\n\n\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t}\n\n\t\tif ( postRotation !== undefined ) {\n\n\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).invert();\n\n\t\t}\n\n\t\tconst quaternion = new Quaternion();\n\t\tconst euler = new Euler();\n\n\t\tconst quaternionValues = [];\n\n\t\tif ( ! values || ! times ) return new QuaternionKeyframeTrack( modelName + '.quaternion', [], [] );\n\n\t\tfor ( let i = 0; i < values.length; i += 3 ) {\n\n\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\t// Check unroll\n\t\t\tif ( i > 2 ) {\n\n\t\t\t\tconst prevQuat = new Quaternion().fromArray(\n\t\t\t\t\tquaternionValues,\n\t\t\t\t\t( ( i - 3 ) / 3 ) * 4\n\t\t\t\t);\n\n\t\t\t\tif ( prevQuat.dot( quaternion ) < 0 ) {\n\n\t\t\t\t\tquaternion.set( - quaternion.x, - quaternion.y, - quaternion.z, - quaternion.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t}\n\n\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t}\n\n\tgenerateMorphTrack( rawTracks ) {\n\n\t\tconst curves = rawTracks.DeformPercent.curves.morph;\n\t\tconst values = curves.values.map( function ( val ) {\n\n\t\t\treturn val / 100;\n\n\t\t} );\n\n\t\tconst morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t}\n\n\t// For all animated objects, times are defined separately for each axis\n\t// Here we'll combine the times into one sorted array without duplicates\n\tgetTimesForAllAxes( curves ) {\n\n\t\tlet times = [];\n\n\t\t// first join together the times for each axis, if defined\n\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t// then sort them\n\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t} );\n\n\t\t// and remove duplicates\n\t\tif ( times.length > 1 ) {\n\n\t\t\tlet targetIndex = 1;\n\t\t\tlet lastValue = times[ 0 ];\n\t\t\tfor ( let i = 1; i < times.length; i ++ ) {\n\n\t\t\t\tconst currentValue = times[ i ];\n\t\t\t\tif ( currentValue !== lastValue ) {\n\n\t\t\t\t\ttimes[ targetIndex ] = currentValue;\n\t\t\t\t\tlastValue = currentValue;\n\t\t\t\t\ttargetIndex ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttimes = times.slice( 0, targetIndex );\n\n\t\t}\n\n\t\treturn times;\n\n\t}\n\n\tgetKeyframeTrackValues( times, curves, initialValue ) {\n\n\t\tconst prevValue = initialValue;\n\n\t\tconst values = [];\n\n\t\tlet xIndex = - 1;\n\t\tlet yIndex = - 1;\n\t\tlet zIndex = - 1;\n\n\t\ttimes.forEach( function ( time ) {\n\n\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t// if there is an x value defined for this frame, use that\n\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\tconst xValue = curves.x.values[ xIndex ];\n\t\t\t\tvalues.push( xValue );\n\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\tconst yValue = curves.y.values[ yIndex ];\n\t\t\t\tvalues.push( yValue );\n\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t}\n\n\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\tconst zValue = curves.z.values[ zIndex ];\n\t\t\t\tvalues.push( zValue );\n\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn values;\n\n\t}\n\n\t// Rotations are defined as Euler angles which can have values  of any size\n\t// These will be converted to quaternions which don't support values greater than\n\t// PI, so we'll interpolate large rotations\n\tinterpolateRotations( curvex, curvey, curvez, eulerOrder ) {\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\t// Add first frame\n\t\ttimes.push( curvex.times[ 0 ] );\n\t\tvalues.push( MathUtils.degToRad( curvex.values[ 0 ] ) );\n\t\tvalues.push( MathUtils.degToRad( curvey.values[ 0 ] ) );\n\t\tvalues.push( MathUtils.degToRad( curvez.values[ 0 ] ) );\n\n\t\tfor ( let i = 1; i < curvex.values.length; i ++ ) {\n\n\t\t\tconst initialValue = [\n\t\t\t\tcurvex.values[ i - 1 ],\n\t\t\t\tcurvey.values[ i - 1 ],\n\t\t\t\tcurvez.values[ i - 1 ],\n\t\t\t];\n\n\t\t\tif ( isNaN( initialValue[ 0 ] ) || isNaN( initialValue[ 1 ] ) || isNaN( initialValue[ 2 ] ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst initialValueRad = initialValue.map( MathUtils.degToRad );\n\n\t\t\tconst currentValue = [\n\t\t\t\tcurvex.values[ i ],\n\t\t\t\tcurvey.values[ i ],\n\t\t\t\tcurvez.values[ i ],\n\t\t\t];\n\n\t\t\tif ( isNaN( currentValue[ 0 ] ) || isNaN( currentValue[ 1 ] ) || isNaN( currentValue[ 2 ] ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValueRad = currentValue.map( MathUtils.degToRad );\n\n\t\t\tconst valuesSpan = [\n\t\t\t\tcurrentValue[ 0 ] - initialValue[ 0 ],\n\t\t\t\tcurrentValue[ 1 ] - initialValue[ 1 ],\n\t\t\t\tcurrentValue[ 2 ] - initialValue[ 2 ],\n\t\t\t];\n\n\t\t\tconst absoluteSpan = [\n\t\t\t\tMath.abs( valuesSpan[ 0 ] ),\n\t\t\t\tMath.abs( valuesSpan[ 1 ] ),\n\t\t\t\tMath.abs( valuesSpan[ 2 ] ),\n\t\t\t];\n\n\t\t\tif ( absoluteSpan[ 0 ] >= 180 || absoluteSpan[ 1 ] >= 180 || absoluteSpan[ 2 ] >= 180 ) {\n\n\t\t\t\tconst maxAbsSpan = Math.max( ...absoluteSpan );\n\n\t\t\t\tconst numSubIntervals = maxAbsSpan / 180;\n\n\t\t\t\tconst E1 = new Euler( ...initialValueRad, eulerOrder );\n\t\t\t\tconst E2 = new Euler( ...currentValueRad, eulerOrder );\n\n\t\t\t\tconst Q1 = new Quaternion().setFromEuler( E1 );\n\t\t\t\tconst Q2 = new Quaternion().setFromEuler( E2 );\n\n\t\t\t\t// Check unroll\n\t\t\t\tif ( Q1.dot( Q2 ) ) {\n\n\t\t\t\t\tQ2.set( - Q2.x, - Q2.y, - Q2.z, - Q2.w );\n\n\t\t\t\t}\n\n\t\t\t\t// Interpolate\n\t\t\t\tconst initialTime = curvex.times[ i - 1 ];\n\t\t\t\tconst timeSpan = curvex.times[ i ] - initialTime;\n\n\t\t\t\tconst Q = new Quaternion();\n\t\t\t\tconst E = new Euler();\n\t\t\t\tfor ( let t = 0; t < 1; t += 1 / numSubIntervals ) {\n\n\t\t\t\t\tQ.copy( Q1.clone().slerp( Q2.clone(), t ) );\n\n\t\t\t\t\ttimes.push( initialTime + t * timeSpan );\n\t\t\t\t\tE.setFromQuaternion( Q, eulerOrder );\n\n\t\t\t\t\tvalues.push( E.x );\n\t\t\t\t\tvalues.push( E.y );\n\t\t\t\t\tvalues.push( E.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttimes.push( curvex.times[ i ] );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvex.values[ i ] ) );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvey.values[ i ] ) );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvez.values[ i ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn [ times, values ];\n\n\t}\n\n}\n\n// parse an FBX file in ASCII format\nclass TextParser {\n\n\tgetPrevNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t}\n\n\tgetCurrentNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t}\n\n\tgetCurrentProp() {\n\n\t\treturn this.currentProp;\n\n\t}\n\n\tpushStack( node ) {\n\n\t\tthis.nodeStack.push( node );\n\t\tthis.currentIndent += 1;\n\n\t}\n\n\tpopStack() {\n\n\t\tthis.nodeStack.pop();\n\t\tthis.currentIndent -= 1;\n\n\t}\n\n\tsetCurrentProp( val, name ) {\n\n\t\tthis.currentProp = val;\n\t\tthis.currentPropName = name;\n\n\t}\n\n\tparse( text ) {\n\n\t\tthis.currentIndent = 0;\n\n\t\tthis.allNodes = new FBXTree();\n\t\tthis.nodeStack = [];\n\t\tthis.currentProp = [];\n\t\tthis.currentPropName = '';\n\n\t\tconst scope = this;\n\n\t\tconst split = text.split( /[\\r\\n]+/ );\n\n\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\tconst matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\tconst matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\tconst matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\tconst matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\tconst matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\n\n\t\t\tif ( matchBeginning ) {\n\n\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\n\n\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\tscope.popStack();\n\n\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\tscope.parseNodePropertyContinued( line );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this.allNodes;\n\n\t}\n\n\tparseNodeBegin( line, property ) {\n\n\t\tconst nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\tconst nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t} );\n\n\t\tconst node = { name: nodeName };\n\t\tconst attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\t// a top node\n\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t} else { // a subnode\n\n\t\t\t// if the subnode already exists, append it\n\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\tthis.pushStack( node );\n\n\t}\n\n\tparseNodeAttr( attrs ) {\n\n\t\tlet id = attrs[ 0 ];\n\n\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet name = '', type = '';\n\n\t\tif ( attrs.length > 1 ) {\n\n\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\ttype = attrs[ 2 ];\n\n\t\t}\n\n\t\treturn { id: id, name: name, type: type };\n\n\t}\n\n\tparseNodeProperty( line, property, contentLine ) {\n\n\t\tlet propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\tlet propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t//\tContent: ,\n\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t}\n\n\t\tconst currentNode = this.getCurrentNode();\n\t\tconst parentName = currentNode.name;\n\n\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Connections\n\t\tif ( propName === 'C' ) {\n\n\t\t\tconst connProps = propValue.split( ',' ).slice( 1 );\n\t\t\tconst from = parseInt( connProps[ 0 ] );\n\t\t\tconst to = parseInt( connProps[ 1 ] );\n\n\t\t\tlet rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t} );\n\n\t\t\tpropName = 'connections';\n\t\t\tpropValue = [ from, to ];\n\t\t\tappend( propValue, rest );\n\n\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Node\n\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t// connections\n\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t} else {\n\n\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\telse currentNode.a = propValue;\n\n\t\t}\n\n\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t}\n\n\t}\n\n\tparseNodePropertyContinued( line ) {\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\tcurrentNode.a += line;\n\n\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t// so convert the string to an array\n\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t}\n\n\t}\n\n\t// parse \"Property70\"\n\tparseNodeSpecialProperty( line, propName, propValue ) {\n\n\t\t// split this\n\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t// into array like below\n\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\tconst props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t} );\n\n\t\tconst innerPropName = props[ 0 ];\n\t\tconst innerPropType1 = props[ 1 ];\n\t\tconst innerPropType2 = props[ 2 ];\n\t\tconst innerPropFlag = props[ 3 ];\n\t\tlet innerPropValue = props[ 4 ];\n\n\t\t// cast values where needed, otherwise leave as strings\n\t\tswitch ( innerPropType1 ) {\n\n\t\t\tcase 'int':\n\t\t\tcase 'enum':\n\t\t\tcase 'bool':\n\t\t\tcase 'ULongLong':\n\t\t\tcase 'double':\n\t\t\tcase 'Number':\n\t\t\tcase 'FieldOfView':\n\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t\tcase 'Color':\n\t\t\tcase 'ColorRGB':\n\t\t\tcase 'Vector3D':\n\t\t\tcase 'Lcl_Translation':\n\t\t\tcase 'Lcl_Rotation':\n\t\t\tcase 'Lcl_Scaling':\n\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// CAUTION: these props must append to parent's parent\n\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t'type': innerPropType1,\n\t\t\t'type2': innerPropType2,\n\t\t\t'flag': innerPropFlag,\n\t\t\t'value': innerPropValue\n\n\t\t};\n\n\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t}\n\n}\n\n// Parse an FBX file in Binary format\nclass BinaryParser {\n\n\tparse( buffer ) {\n\n\t\tconst reader = new BinaryReader( buffer );\n\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\tconst version = reader.getUint32();\n\n\t\tif ( version < 6400 ) {\n\n\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\n\n\t\t}\n\n\t\tconst allNodes = new FBXTree();\n\n\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\tconst node = this.parseNode( reader, version );\n\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t}\n\n\t\treturn allNodes;\n\n\t}\n\n\t// Check if reader has reached the end of content.\n\tendOfContent( reader ) {\n\n\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t// - 16bytes: magic\n\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t// - 4bytes: magic\n\t\t// - 4bytes: version\n\t\t// - 120bytes: zero\n\t\t// - 16bytes: magic\n\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t} else {\n\n\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t}\n\n\t}\n\n\t// recursively parse nodes until the end of the file is reached\n\tparseNode( reader, version ) {\n\n\t\tconst node = {};\n\n\t\t// The first three data sizes depends on version.\n\t\tconst endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\tconst numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\n\n\t\tconst nameLen = reader.getUint8();\n\t\tconst name = reader.getString( nameLen );\n\n\t\t// Regards this node as NULL-record if endOffset is zero\n\t\tif ( endOffset === 0 ) return null;\n\n\t\tconst propertyList = [];\n\n\t\tfor ( let i = 0; i < numProperties; i ++ ) {\n\n\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t}\n\n\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\tconst id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\tconst attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\tconst attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t// check if this node represents just a single property\n\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\tconst subNode = this.parseNode( reader, version );\n\n\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t}\n\n\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\tif ( typeof id === 'number' ) node.id = id;\n\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\tif ( name !== '' ) node.name = name;\n\n\t\treturn node;\n\n\t}\n\n\tparseSubNode( name, node, subNode ) {\n\n\t\t// special case: child node is single property\n\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\tconst value = subNode.propertyList[ 0 ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\tsubNode.a = value;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t}\n\n\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\tconst array = [];\n\n\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t} );\n\n\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\tnode.connections = [];\n\n\t\t\t}\n\n\t\t\tnode.connections.push( array );\n\n\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\tconst keys = Object.keys( subNode );\n\n\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t} );\n\n\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\tlet innerPropName = subNode.propertyList[ 0 ];\n\t\t\tlet innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\tconst innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\tconst innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\tlet innerPropValue;\n\n\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\tinnerPropValue = [\n\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t}\n\n\t\t\t// this will be copied to parent, see above\n\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t}\n\n\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tparseProperty( reader ) {\n\n\t\tconst type = reader.getString( 1 );\n\t\tlet length;\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 'C':\n\t\t\t\treturn reader.getBoolean();\n\n\t\t\tcase 'D':\n\t\t\t\treturn reader.getFloat64();\n\n\t\t\tcase 'F':\n\t\t\t\treturn reader.getFloat32();\n\n\t\t\tcase 'I':\n\t\t\t\treturn reader.getInt32();\n\n\t\t\tcase 'L':\n\t\t\t\treturn reader.getInt64();\n\n\t\t\tcase 'R':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\tcase 'S':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getString( length );\n\n\t\t\tcase 'Y':\n\t\t\t\treturn reader.getInt16();\n\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'f':\n\t\t\tcase 'i':\n\t\t\tcase 'l':\n\n\t\t\t\tconst arrayLength = reader.getUint32();\n\t\t\t\tconst encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\tconst compressedLength = reader.getUint32();\n\n\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst data = fflate.unzlibSync( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) );\n\t\t\t\tconst reader2 = new BinaryReader( data.buffer );\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'b':\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\tcase 'i':\n\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t}\n\n\t\t\t\tbreak; // cannot happen but is required by the DeepScan\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t}\n\n\t}\n\n}\n\nclass BinaryReader {\n\n\tconstructor( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\t\tthis._textDecoder = new TextDecoder();\n\n\t}\n\n\tgetOffset() {\n\n\t\treturn this.offset;\n\n\t}\n\n\tsize() {\n\n\t\treturn this.dv.buffer.byteLength;\n\n\t}\n\n\tskip( length ) {\n\n\t\tthis.offset += length;\n\n\t}\n\n\t// seems like true/false representation depends on exporter.\n\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t// then sees LSB.\n\tgetBoolean() {\n\n\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t}\n\n\tgetBooleanArray( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getBoolean() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint8() {\n\n\t\tconst value = this.dv.getUint8( this.offset );\n\t\tthis.offset += 1;\n\t\treturn value;\n\n\t}\n\n\tgetInt16() {\n\n\t\tconst value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\tthis.offset += 2;\n\t\treturn value;\n\n\t}\n\n\tgetInt32() {\n\n\t\tconst value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetInt32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint32() {\n\n\t\tconst value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t// There's a possibility that this method returns wrong value if the value\n\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t// TODO: safely handle 64-bit integer\n\tgetInt64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\t// calculate negative value\n\t\tif ( high & 0x80000000 ) {\n\n\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetInt64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// Note: see getInt64() comment\n\tgetUint64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetFloat32() {\n\n\t\tconst value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetFloat32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetFloat64() {\n\n\t\tconst value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\tthis.offset += 8;\n\t\treturn value;\n\n\t}\n\n\tgetFloat64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetArrayBuffer( size ) {\n\n\t\tconst value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\tthis.offset += size;\n\t\treturn value;\n\n\t}\n\n\tgetString( size ) {\n\n\t\tconst start = this.offset;\n\t\tlet a = new Uint8Array( this.dv.buffer, start, size );\n\n\t\tthis.skip( size );\n\n\t\tconst nullByte = a.indexOf( 0 );\n\t\tif ( nullByte >= 0 ) a = new Uint8Array( this.dv.buffer, start, nullByte );\n\n\t\treturn this._textDecoder.decode( a );\n\n\t}\n\n}\n\n// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n// and BinaryParser( FBX Binary format)\nclass FBXTree {\n\n\tadd( key, val ) {\n\n\t\tthis[ key ] = val;\n\n\t}\n\n}\n\n// ************** UTILITY FUNCTIONS **************\n\nfunction isFbxFormatBinary( buffer ) {\n\n\tconst CORRECT = 'Kaydara\\u0020FBX\\u0020Binary\\u0020\\u0020\\0';\n\n\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n}\n\nfunction isFbxFormatASCII( text ) {\n\n\tconst CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\tlet cursor = 0;\n\n\tfunction read( offset ) {\n\n\t\tconst result = text[ offset - 1 ];\n\t\ttext = text.slice( cursor + offset );\n\t\tcursor ++;\n\t\treturn result;\n\n\t}\n\n\tfor ( let i = 0; i < CORRECT.length; ++ i ) {\n\n\t\tconst num = read( 1 );\n\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nfunction getFbxVersion( text ) {\n\n\tconst versionRegExp = /FBXVersion: (\\d+)/;\n\tconst match = text.match( versionRegExp );\n\n\tif ( match ) {\n\n\t\tconst version = parseInt( match[ 1 ] );\n\t\treturn version;\n\n\t}\n\n\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n}\n\n// Converts FBX ticks into real time seconds.\nfunction convertFBXTimeToSeconds( time ) {\n\n\treturn time / 46186158000;\n\n}\n\nconst dataArray = [];\n\n// extracts the data from the correct position in the FBX array based on indexing type\nfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\tlet index;\n\n\tswitch ( infoObject.mappingType ) {\n\n\t\tcase 'ByPolygonVertex' :\n\t\t\tindex = polygonVertexIndex;\n\t\t\tbreak;\n\t\tcase 'ByPolygon' :\n\t\t\tindex = polygonIndex;\n\t\t\tbreak;\n\t\tcase 'ByVertice' :\n\t\t\tindex = vertexIndex;\n\t\t\tbreak;\n\t\tcase 'AllSame' :\n\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\tbreak;\n\t\tdefault :\n\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t}\n\n\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\tconst from = index * infoObject.dataSize;\n\tconst to = from + infoObject.dataSize;\n\n\treturn slice( dataArray, infoObject.buffer, from, to );\n\n}\n\nconst tempEuler = new Euler();\nconst tempVec = new Vector3();\n\n// generate transformation from FBX transform data\n// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\nfunction generateTransform( transformData ) {\n\n\tconst lTranslationM = new Matrix4();\n\tconst lPreRotationM = new Matrix4();\n\tconst lRotationM = new Matrix4();\n\tconst lPostRotationM = new Matrix4();\n\n\tconst lScalingM = new Matrix4();\n\tconst lScalingPivotM = new Matrix4();\n\tconst lScalingOffsetM = new Matrix4();\n\tconst lRotationOffsetM = new Matrix4();\n\tconst lRotationPivotM = new Matrix4();\n\n\tconst lParentGX = new Matrix4();\n\tconst lParentLX = new Matrix4();\n\tconst lGlobalT = new Matrix4();\n\n\tconst inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\tif ( transformData.preRotation ) {\n\n\t\tconst array = transformData.preRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.rotation ) {\n\n\t\tconst array = transformData.rotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.postRotation ) {\n\n\t\tconst array = transformData.postRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\t\tlPostRotationM.invert();\n\n\t}\n\n\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t// Pivots and offsets\n\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t// parent transform\n\tif ( transformData.parentMatrixWorld ) {\n\n\t\tlParentLX.copy( transformData.parentMatrix );\n\t\tlParentGX.copy( transformData.parentMatrixWorld );\n\n\t}\n\n\tconst lLRM = lPreRotationM.clone().multiply( lRotationM ).multiply( lPostRotationM );\n\t// Global Rotation\n\tconst lParentGRM = new Matrix4();\n\tlParentGRM.extractRotation( lParentGX );\n\n\t// Global Shear*Scaling\n\tconst lParentTM = new Matrix4();\n\tlParentTM.copyPosition( lParentGX );\n\n\tconst lParentGRSM = lParentTM.clone().invert().multiply( lParentGX );\n\tconst lParentGSM = lParentGRM.clone().invert().multiply( lParentGRSM );\n\tconst lLSM = lScalingM;\n\n\tconst lGlobalRS = new Matrix4();\n\n\tif ( inheritType === 0 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lLSM );\n\n\t} else if ( inheritType === 1 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lLSM );\n\n\t} else {\n\n\t\tconst lParentLSM = new Matrix4().scale( new Vector3().setFromMatrixScale( lParentLX ) );\n\t\tconst lParentLSM_inv = lParentLSM.clone().invert();\n\t\tconst lParentGSM_noLocal = lParentGSM.clone().multiply( lParentLSM_inv );\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lLSM );\n\n\t}\n\n\tconst lRotationPivotM_inv = lRotationPivotM.clone().invert();\n\tconst lScalingPivotM_inv = lScalingPivotM.clone().invert();\n\t// Calculate the local transform matrix\n\tlet lTransform = lTranslationM.clone().multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\n\n\tconst lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\tconst lGlobalTranslation = lParentGX.clone().multiply( lLocalTWithAllPivotAndOffsetInfo );\n\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\tlTransform = lGlobalT.clone().multiply( lGlobalRS );\n\n\t// from global to local\n\tlTransform.premultiply( lParentGX.invert() );\n\n\treturn lTransform;\n\n}\n\n// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\nfunction getEulerOrder( order ) {\n\n\torder = order || 0;\n\n\tconst enums = [\n\t\t'ZYX', // -> XYZ extrinsic\n\t\t'YZX', // -> XZY extrinsic\n\t\t'XZY', // -> YZX extrinsic\n\t\t'ZXY', // -> YXZ extrinsic\n\t\t'YXZ', // -> ZXY extrinsic\n\t\t'XYZ', // -> ZYX extrinsic\n\t\t//'SphericXYZ', // not possible to support\n\t];\n\n\tif ( order === 6 ) {\n\n\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\treturn enums[ 0 ];\n\n\t}\n\n\treturn enums[ order ];\n\n}\n\n// Parses comma separated list of numbers and returns them an array.\n// Used internally by the TextParser\nfunction parseNumberArray( value ) {\n\n\tconst array = value.split( ',' ).map( function ( val ) {\n\n\t\treturn parseFloat( val );\n\n\t} );\n\n\treturn array;\n\n}\n\nfunction convertArrayBufferToString( buffer, from, to ) {\n\n\tif ( from === undefined ) from = 0;\n\tif ( to === undefined ) to = buffer.byteLength;\n\n\treturn new TextDecoder().decode( new Uint8Array( buffer, from, to ) );\n\n}\n\nfunction append( a, b ) {\n\n\tfor ( let i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n}\n\nfunction slice( a, b, from, to ) {\n\n\tfor ( let i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n\treturn a;\n\n}\n\n\nexport { FBXLoader };\n","import * as THREE from 'three';\n\nexport function modulo(a, b){\n    return ((a % b) + b) % b;\n}\n\nexport function genColorArray(color:THREE.Color, n:number){\n    var arr = [];\n    for (let i = 0; i < n; i++) {\n        arr.push(color.r, color.g, color.b);\n    }\n    return new THREE.BufferAttribute(new Float32Array(arr), 3);\n}\n\nexport function rgb2hex(r, g, b){\n    return (r << 16) + (g << 8) + b;\n}","\nimport { Noise2D, genSeed, multiLayeredNoise } from './noise';\n\nimport { FBXLoader } from './threeAddons/loaders/FBXLoader';\n\nimport * as THREE from 'three';\nimport { genColorArray, rgb2hex } from './utils';\n\nconst SAMPLES = 1/4; // pts per unit\n\nfunction sfloor(x, n){\n    return Math.floor(x / n) * n;\n}\n\nfunction im_getPosition(instanced_mesh:THREE.InstancedMesh, i:number):THREE.Vector3{\n    return new THREE.Vector3(\n        instanced_mesh.instanceMatrix.array[i*16+12],\n        instanced_mesh.instanceMatrix.array[i*16+13],\n        instanced_mesh.instanceMatrix.array[i*16+14]);\n}\nfunction im_getX(instanced_mesh:THREE.InstancedMesh, i:number):number{\n    return instanced_mesh.instanceMatrix.array[i*16+12];\n}\nfunction im_getY(instanced_mesh:THREE.InstancedMesh, i:number):number{\n    return instanced_mesh.instanceMatrix.array[i*16+13];\n}\nfunction im_getZ(instanced_mesh:THREE.InstancedMesh, i:number):number{\n\n    return instanced_mesh.instanceMatrix.array[i*16+14];\n}\nfunction im_setPosition(instanced_mesh:THREE.InstancedMesh, i:number, pos):void{\n    instanced_mesh.instanceMatrix.array[i*16+12] = pos.x;\n    instanced_mesh.instanceMatrix.array[i*16+13] = pos.y;\n    instanced_mesh.instanceMatrix.array[i*16+14] = pos.z;\n}\nfunction im_setX(instanced_mesh:THREE.InstancedMesh, i:number, x:number):void{\n    instanced_mesh.instanceMatrix.array[i*16+12] = x;\n}\nfunction im_setY(instanced_mesh:THREE.InstancedMesh, i:number, y:number):void{\n    instanced_mesh.instanceMatrix.array[i*16+13] = y;\n}\nfunction im_setZ(instanced_mesh:THREE.InstancedMesh, i:number, z:number):void{\n    instanced_mesh.instanceMatrix.array[i*16+14] = z;\n}\n\n\n\n\nfunction f_amp(x) {return Math.exp(-(5*(x)**2))}\nfunction f_tree_amp(x){\n    const C = 0.5;\n    const H = 15;\n\n    if (x > HIGH_PEAK_ZONE) return 0;\n    if (x > HIGH_PEAK_ZONE - H) return (HIGH_PEAK_ZONE - x) / H;\n    if (x > CAMPAIGN_ZONE + C) return 1;\n    if (x > CAMPAIGN_ZONE) return (x - CAMPAIGN_ZONE) / C;\n    return 0;\n}\n\n\nconst CAMPAIGN_ZONE = 0;\nconst MOUNTAIN_ZONE = 20;\nconst HIGH_PEAK_ZONE = 35;\nconst COLORS = [\n    [94, 173, 52], // CAMPAGNE\n    [158, 119, 51], // MONTAGNE\n    [209, 216, 224] // NEIGE\n\n].map((c) => [c[0]/255, c[1]/255, c[2]/255])\n\n\nconst min_amplitude = 0.0;\nconst max_amplitude = 60.0;\n\n\nconst tree_model = require(\"../assets/tree.fbx\");\nconst cloud_models = [\n    require(\"../assets/Cloud_1.fbx\"),\n    require(\"../assets/Cloud_2.fbx\"),\n    require(\"../assets/Cloud_3.fbx\"),\n    require(\"../assets/Cloud_4.fbx\")\n];\n\nexport class Mountain{\n\n    width: number;\n    length: number;\n    GROUND_SIZE_W: number;\n    GROUND_SIZE_L: number;\n    THREE_INSTANCE_MAX = 1000;\n    CLOUD_INSTANCE_MAX = 10;\n\n\n    floor: THREE.Mesh;\n    seed_floor = genSeed(2)\n\n    trees: THREE.InstancedMesh[] = [];\n    seed_tree = genSeed(1)\n    TREES_INIT_MATRIX = new THREE.Matrix4().makeRotationFromEuler(new THREE.Euler(-Math.PI/2, 0, 0)).scale(new THREE.Vector3(3, 3, 3));\n\n    clouds: THREE.InstancedMesh[] = [];\n    seed_cloud = genSeed(1)\n\n    trajectory: THREE.Mesh;\n\n\n\n    mesh_loaded = -6\n    _onLoad_\n\n    debug_mesh:THREE.InstancedMesh;\n\n\n\n    origin: THREE.Vector3;\n    last_shift = 0;\n    shift = 0;\n\n\n    constructor(width:number, length:number){\n\n        this.GROUND_SIZE_W = width * SAMPLES;\n        this.GROUND_SIZE_L = length * SAMPLES;\n\n        this.width = width;\n        this.length = length;\n        this.origin = new THREE.Vector3(0, 0, 0);\n        this.shift = 0;\n        this.last_shift = 0;\n\n\n        this.loadTreeModel();\n        this.loadCloudModel();\n\n        // create a grid of points\n        const geometry = new THREE.PlaneGeometry(this.width, this.length, this.GROUND_SIZE_W-1, this.GROUND_SIZE_L-1);\n        geometry.setAttribute('color', genColorArray(new THREE.Color(0xfffff), geometry.attributes.position.count));\n\n        const material = new THREE.MeshStandardMaterial({ side: THREE.FrontSide, vertexColors: true })\n        this.floor = new THREE.Mesh(geometry, material);\n        this.floor.receiveShadow = true;\n        this.floor.castShadow = false;\n\n        this.add_mesh_loaded()\n\n        var s = new THREE.SphereGeometry(0.1, 8, 4);\n        var m = new THREE.MeshBasicMaterial({color: 0xff0000});\n        this.debug_mesh = new THREE.InstancedMesh(s, m, this.GROUND_SIZE_W * this.GROUND_SIZE_L);\n    \n\n        var trajectoryGeometry = new THREE.PlaneGeometry(0.5, 400, 1, 1);  \n        trajectoryGeometry.attributes.position.setXYZ(0, 0.2, 5, -15); \n        trajectoryGeometry.attributes.position.setXYZ(1, -0.2, 5, -15);\n        trajectoryGeometry.attributes.position.setXYZ(2, 0.15, 5, -40);\n        trajectoryGeometry.attributes.position.setXYZ(3, -0.15, 5, -40);        \n        trajectoryGeometry.setAttribute('color', genColorArray(new THREE.Color(rgb2hex(44, 44, 184)), trajectoryGeometry.attributes.position.count));\n\n        var trajectoryMaterial = new THREE.MeshBasicMaterial({ side: THREE.FrontSide, vertexColors: true });\n\n        this.trajectory = new THREE.Mesh(trajectoryGeometry, trajectoryMaterial);\n\n        \n\n    }\n\n    public setPosition(x, y, z){\n        this.origin = new THREE.Vector3(x, y, z);\n        this.computeMoutainModel();\n    }\n\n    public update(scoll_offset){\n        if (scoll_offset > 80){\n            var t = new Date().getTime() / 1000.0;\n            // this.plane.position.y = Math.cos(t*1.5) * 0.25;\n            var y = Math.cos(t* 1.5) * 0.25;\n            this.trajectory.geometry.attributes.position.setXYZ(0, 0.2, 5 + y, -15);\n            this.trajectory.geometry.attributes.position.setXYZ(1, -0.2, 5 + y, -15);\n            // this.trajectory.geometry.attributes.position.setXYZ(2, 0.15, 5 + y, -40);\n            // this.trajectory.geometry.attributes.position.setXYZ(3, -0.15, 5 + y, -40);\n\n            this.trajectory.geometry.attributes.position.needsUpdate = true;\n        }\n    }\n\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////                               PROCEDURAL GENERATION\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    private computeMoutainModel(){\n        if (this.mesh_loaded < 0) return;\n\n        for (let i = 0; i < this.trees.length; i++) {\n            this.trees[i].count = 0;\n        }\n        for (var zi = 0; zi < this.GROUND_SIZE_L; zi++) {\n            this.computeMountainLayer(zi);\n        }\n        this.computeNormals()\n    }\n\n\n    public computeMountainLayer(zi, shift=0){\n        const X_NORM = [-0.2, 1 ]\n        const MOUNTAIN_FREQ = 0.015;\n        const TREE_FREQ = 0.05;\n\n        const CLOUD_FREQ = 0.05;\n        const CLOUD_PROBA = 0.1;\n\n\n        var vertices = this.floor.geometry.getAttribute('position').array;\n        var colors = this.floor.geometry.getAttribute('color').array;\n\n\n        for (var xi = 0; xi < this.GROUND_SIZE_W; xi++) {\n\n\n            \n            var xn = 1-Math.abs((xi / (this.GROUND_SIZE_W-1)) * 2 - 1) * (X_NORM[1] - X_NORM[0]);\n            var moutain_amp = f_amp(xn) * (max_amplitude - min_amplitude) + min_amplitude;\n\n\n            var x = xi / SAMPLES - this.width / 2.0 + this.origin.x;\n            var z = zi / SAMPLES - this.width / 2.0 + this.origin.z;\n\n            var moutain_noise = multiLayeredNoise(x * MOUNTAIN_FREQ, (z + shift - this.origin.z)  * MOUNTAIN_FREQ, this.seed_floor) * moutain_amp;\n            var y = moutain_noise + this.origin.y;\n\n            var color_i = 0;\n            if (y - this.origin.y > MOUNTAIN_ZONE){\n                color_i = 1;\n            }\n            if (y - this.origin.y > HIGH_PEAK_ZONE){\n                color_i = 2;\n            }\n            \n            var i = xi + zi * this.GROUND_SIZE_W;\n\n            \n            colors[i * 3 + 0] = COLORS[color_i][0]\n            colors[i * 3 + 1] = COLORS[color_i][1]\n            colors[i * 3 + 2] = COLORS[color_i][2]\n\n            vertices[i * 3 + 0] = x\n            vertices[i * 3 + 1] = y//f_tree_amp(amp) * 20\n            vertices[i * 3 + 2] = z\n            im_setPosition(this.debug_mesh, i, new THREE.Vector3(x, y, z));\n\n            \n            var amp = f_tree_amp(y - this.origin.y);\n            var tree_noise = multiLayeredNoise(x * TREE_FREQ, (z + shift - this.origin.z)  * TREE_FREQ, this.seed_tree)* amp;\n            if (tree_noise > 0.65 && \n                x > this.origin.x - this.width/2.0 + this.width/15.0 && \n                x < this.origin.x + this.width/2.0 + this.width/15.0 && \n                xi != this.GROUND_SIZE_W-1)\n            {\n\n                var first_free = this.trees[0].count;\n                if (first_free >= this.THREE_INSTANCE_MAX) continue;\n\n                // x += 1;\n                var cxi = xi + (Math.random()-0.5);\n                var czi = zi + (Math.random()-0.5);\n                var xn = 1-Math.abs((cxi / (this.GROUND_SIZE_W-1)) * 2 - 1) * (X_NORM[1] - X_NORM[0]);\n                var moutain_amp = f_amp(xn) * (max_amplitude - min_amplitude) + min_amplitude;\n\n                var x = cxi / SAMPLES - this.width / 2.0 + this.origin.x;\n                var z = czi / SAMPLES - this.width / 2.0 + this.origin.z;\n\n                var moutain_noise = multiLayeredNoise(x * MOUNTAIN_FREQ, (z + shift - this.origin.z)  * MOUNTAIN_FREQ, this.seed_floor) * moutain_amp;\n                var y = moutain_noise + this.origin.y;\n\n\n                this.trees[0].count += 1;\n                this.trees[1].count += 1;\n                this.trees[0].setMatrixAt(first_free, this.TREES_INIT_MATRIX.multiply(new THREE.Matrix4().makeRotationFromEuler(new THREE.Euler(0, 0, Math.random()*Math.PI*2))));\n                this.trees[1].setMatrixAt(first_free, this.TREES_INIT_MATRIX.multiply(new THREE.Matrix4().makeRotationFromEuler(new THREE.Euler(0, 0, Math.random()*Math.PI*2))));\n                im_setPosition(this.trees[0], first_free, new THREE.Vector3(x, y, z));\n                im_setPosition(this.trees[1], first_free, new THREE.Vector3(x, y, z));\n            }\n            var cloud_noise = multiLayeredNoise(x * CLOUD_FREQ, (z + shift - this.origin.z)  * CLOUD_FREQ, this.seed_cloud);\n            var cloud_id = Math.floor(Math.random() * this.clouds.length);\n            if (cloud_noise < CLOUD_PROBA){\n                var first_free = this.clouds[cloud_id].count;\n                if (first_free >= this.CLOUD_INSTANCE_MAX) continue;\n                this.clouds[cloud_id].count += 1;\n                this.clouds[cloud_id].setMatrixAt(first_free, new THREE.Matrix4().makeRotationFromEuler(new THREE.Euler(0, Math.random()*Math.PI*2, 0)));\n                im_setPosition(this.clouds[cloud_id], first_free, new THREE.Vector3(x, 30, z));\n            }\n        }\n    }\n\n    private shift_vertexs(to_shift){\n        var vertices = this.floor.geometry.getAttribute('position').array;\n        var colors = this.floor.geometry.getAttribute('color').array;\n\n        var zio = 0\n        var sens = 1\n        if (to_shift < 0){\n            zio = this.GROUND_SIZE_L - 1\n            sens = -1\n        }\n\n        for (var xi = 0; xi < this.GROUND_SIZE_W; xi++) {\n            var zi = zio;\n\n            while (zi + to_shift < this.GROUND_SIZE_L && zi + to_shift >= 0){\n\n                var i = xi + zi * this.GROUND_SIZE_W;\n                var to_i = xi + (zi + to_shift) * this.GROUND_SIZE_W;\n\n                vertices[i * 3 + 1] = vertices[to_i * 3 + 1];\n                colors[i * 3 + 0] = colors[to_i * 3 + 0];\n                colors[i * 3 + 1] = colors[to_i * 3 + 1];\n                colors[i * 3 + 2] = colors[to_i * 3 + 2];\n\n                var y = im_getY(this.debug_mesh, to_i);\n                im_setY(this.debug_mesh, i, y);\n\n                zi += sens;\n            }\n        }\n\n        this.debug_mesh.instanceMatrix.needsUpdate = true;\n    }\n\n    private shift_trees(to_shift){\n        for (let i = 0; i < this.trees.length; i++) {\n            for (let j = 0; j < this.trees[i].count; j++) {\n                var p = im_getPosition(this.trees[i], j);\n                p.z -= to_shift;\n                im_setPosition(this.trees[i], j, p);\n            }\n        }\n    }\n\n    private shift_clouds(to_shift){\n        for (let i = 0; i < this.clouds.length; i++) {\n            for (let j = 0; j < this.clouds[i].count; j++) {\n                var p = im_getPosition(this.clouds[i], j);\n                p.z -= to_shift;\n                im_setPosition(this.clouds[i], j, p);\n            }\n        }\n    }\n\n\n    public shift_noise(v){\n        this.shift += v;\n\n        var rshift = sfloor(this.shift, 1.0/SAMPLES);\n        var decay = this.shift - rshift;\n\n\n        var to_shift = (rshift - this.last_shift) * SAMPLES;\n        if (Math.abs(to_shift) >= 1){\n\n            var vertices = this.floor.geometry.getAttribute('position').array;\n            var colors = this.floor.geometry.getAttribute('color').array;\n\n            var zio = this.GROUND_SIZE_L\n            var sens = 1\n            if (to_shift < 0){\n                zio = -1\n                sens = -1\n            }\n\n            this.shift_vertexs(to_shift)\n            this.shift_trees(to_shift/SAMPLES)\n            this.shift_clouds(to_shift/SAMPLES)\n            var zi = zio - to_shift;\n            while (zi < this.GROUND_SIZE_L && zi >= 0){\n                this.computeMountainLayer(zi, rshift);\n                zi += sens;\n            }\n\n            this.floor.geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n            this.floor.geometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\n\n            this.last_shift = rshift;\n        }\n        this.floor.position.z = -decay\n        this.debug_mesh.position.z = -decay\n        for (let i = 0; i < this.trees.length; i++) {\n            this.trees[i].position.z = -decay\n        }\n        for (let i = 0; i < this.clouds.length; i++) {\n            this.clouds[i].position.z = -decay\n        }\n\n        this.drop_trees()\n        this.drop_clouds()\n\n        for (let j = 0; j < this.trees.length; j++) {\n            this.trees[j].instanceMatrix.needsUpdate = true;\n        }\n        for (let j = 0; j < this.clouds.length; j++) {\n            this.clouds[j].instanceMatrix.needsUpdate = true;\n        }\n        this.computeNormals()\n    }\n\n    private drop_trees(){\n        let to_drop = []\n        for (let j = 0; j < this.trees[0].count; j++) {\n            for (let i = 0; i < this.trees.length; i++) {\n                var z = im_getZ(this.trees[i], j);\n                if (z < this.origin.z - this.width /2.0 - 10 || z > this.origin.z + this.length - this.width/2.0 + 10){\n                    if (i == 0)\n                        to_drop.push(j);\n                }\n            }\n        }\n        for (let j = to_drop.length-1; j >= 0; j--) {\n            for (let i = to_drop[j]; i < this.trees[0].count-1; i++) {\n                for (let k = 0; k < this.trees.length; k++) {\n                    var  p = im_getPosition(this.trees[k], i+1)\n                    im_setPosition(this.trees[k], i, p);\n                }\n            }\n        }\n        for (let j = 0; j < this.trees.length; j++) {\n            this.trees[j].count -= to_drop.length;\n        }\n    }\n\n    private drop_clouds(){\n        for (let c = 0; c < this.clouds.length; c++) {\n            let to_drop = []\n            for (let j = 0; j < this.clouds[c].count; j++) {\n                var z = im_getZ(this.clouds[c], j);\n                if (z < this.origin.z - this.width /2.0 - 10 || z > this.origin.z + this.length - this.width/2.0 + 10){\n                    to_drop.push(j);\n                }\n            }\n            for (let j = to_drop.length-1; j >= 0; j--) {\n                for (let i = to_drop[j]; i < this.clouds[c].count-1; i++) {\n                    var  p = im_getPosition(this.clouds[c], i+1)\n                    im_setPosition(this.clouds[c], i, p);\n                }\n            }\n            this.clouds[c].count -= to_drop.length;\n        }\n    }\n\n\n\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////                               LOADING FUNCTIONS\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    private loadTreeModel(){\n        const fbxLoader = new FBXLoader();\n        fbxLoader.load(tree_model, (object) => {\n\n\n            let v = 0\n            v = object.children[1].geometry.attributes.position.count;\n            object.children[1].geometry.setAttribute('color', genColorArray(new THREE.Color(40/255, 180/255, 100/255), v), 3);\n            object.children[1].material = new THREE.MeshStandardMaterial({ side: THREE.FrontSide, vertexColors: true });\n\n            v = object.children[0].geometry.attributes.position.count;\n            object.children[0].geometry.setAttribute('color', genColorArray(new THREE.Color(0xd35400), v), 3);\n            object.children[0].material = new THREE.MeshStandardMaterial({ side: THREE.FrontSide, vertexColors: true });\n\n            for (let i = 0; i < object.children.length; i++) {\n                var position = object.children[i].geometry.attributes.position.array;\n                for (let i = 0; i < position.length; i+=3) {\n                    position[i+2] += 0.2;\n                }\n            }\n\n            var object0 = new THREE.InstancedMesh(object.children[0].geometry, object.children[0].material, this.THREE_INSTANCE_MAX);\n            var object1 = new THREE.InstancedMesh(object.children[1].geometry, object.children[1].material, this.THREE_INSTANCE_MAX);\n            object0.count = 0;\n            object1.count = 0;\n            object0.castShadow = true;\n            object1.castShadow = true;\n            object0.receiveShadow = false;\n            object1.receiveShadow = false;\n\n            this.trees = [object0, object1];\n            this.add_mesh_loaded()\n        });\n    }\n\n    private loadCloudModel(){\n        const fbxLoader = new FBXLoader();\n        for (let i = 0; i < cloud_models.length; i++) {\n\n            fbxLoader.load(cloud_models[i], (object) => {\n                \n                object.children[0].geometry.setAttribute('color', genColorArray(new THREE.Color(1, 1, 1), object.children[0].geometry.attributes.position.count), 3);\n                object.children[0].material = new THREE.MeshStandardMaterial({ side: THREE.FrontSide, vertexColors: true });\n\n                var object0 = new THREE.InstancedMesh(object.children[0].geometry, object.children[0].material, this.CLOUD_INSTANCE_MAX);\n                object0.count = 0;\n                object0.castShadow = false;\n                object0.receiveShadow = false;\n                // im_setPosition(object0, 0, new THREE.Vector3(Math.random()*60-30, 30, Math.random()*60-30));\n                this.clouds.push(object0);\n                this.add_mesh_loaded()\n            });\n        }\n    }\n\n    public onLoad(f){\n        this._onLoad_ = f\n    }\n\n    public getMeshs(){\n        var meshs = [this.floor, this.trajectory];\n        // meshs.push(this.debug_mesh);\n        for (let i = 0; i < this.trees.length; i++) {\n            meshs.push(this.trees[i]);\n        }\n        for (let i = 0; i < this.clouds.length; i++) {\n            meshs.push(this.clouds[i]);\n        }\n        return meshs;\n    }\n\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////                               PRIVATE\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    private computeNormals(){\n        \n        this.floor.geometry.computeVertexNormals();\n        // set the normals of the sides to vertical\n        var normals = this.floor.geometry.getAttribute('normal').array;\n\n        for (var zi = 0; zi < this.GROUND_SIZE_L; zi++) {\n            var xi = 0;\n            var i = xi + zi * this.GROUND_SIZE_W;\n            normals[i * 3 + 0] = 0;\n            normals[i * 3 + 1] = 1;\n            normals[i * 3 + 2] = 0;\n\n            xi = this.GROUND_SIZE_W - 1;\n            i = xi + zi * this.GROUND_SIZE_W;\n            normals[i * 3 + 0] = 0;\n            normals[i * 3 + 1] = 1;\n            normals[i * 3 + 2] = 0;\n        }\n\n        for (let i = 0; i < this.trees.length; i++) {\n            this.trees[i].geometry.computeVertexNormals();\n        }\n    }\n\n\n    private add_mesh_loaded(){\n        this.mesh_loaded +=1\n        if (this.mesh_loaded == 0){\n            this._onLoad_()\n            this.computeMoutainModel()\n        }\n\n    }\n\n}\n\n\n    // private plane_vertexs(xi, zi){\n\n    //     const XR = 2\n    //     const YR = 1\n    //     const FA = 3\n        \n\n    //     if (xi > 0 && xi < this.GROUND_SIZE_W-1 && zi > 0 && zi < this.GROUND_SIZE_L-1){\n    //         return [\n    //             ((xi-1) * XR + 0) * FA + 1  + (zi-1) * this.GROUND_SIZE_W * FA * XR * YR, // left bottom\n    //             ((xi-1) * XR + 1) * FA + 1  + (zi-1) * this.GROUND_SIZE_W * FA * XR * YR, // middle bottom\n    //             ((xi+0) * XR + 0) * FA + 0  + (zi-1) * this.GROUND_SIZE_W * FA * XR * YR, // right bottom\n    //             ((xi-1) * XR + 1) * FA + 2  + (zi) * this.GROUND_SIZE_W * FA * XR * YR,   // left top\n    //             ((xi+0) * XR + 0) * FA + 2  + (zi) * this.GROUND_SIZE_W * FA * XR * YR,   // right top\n    //             ((xi+0) * XR + 1) * FA + 0  + (zi) * this.GROUND_SIZE_W * FA * XR * YR,   // middle top\n    //         ]\n    //     }\n    //     if (xi == 0 && zi > 0 && zi < this.GROUND_SIZE_L-1){\n    //         return [\n    //             ((xi+0) * XR + 0) * FA + 0  + (zi-1) * this.GROUND_SIZE_W * FA * XR * YR, // right bottom\n    //             ((xi+0) * XR + 0) * FA + 2  + (zi) * this.GROUND_SIZE_W * FA * XR * YR,  // right top\n    //             ((xi+0) * XR + 1) * FA + 0  + (zi) * this.GROUND_SIZE_W * FA * XR * YR,  // middle top\n    //         ]\n    //     }\n    //     if (xi == this.GROUND_SIZE_W-1 && zi > 0 && zi < this.GROUND_SIZE_L-1){\n    //         return [\n    //             ((xi-1) * XR + 0) * FA + 1  + (zi-1) * this.GROUND_SIZE_W * FA * XR * YR, // left bottom\n    //             ((xi-1) * XR + 1) * FA + 1  + (zi-1) * this.GROUND_SIZE_W * FA * XR * YR, // middle bottom\n    //             ((xi-1) * XR + 1) * FA + 2  + (zi) * this.GROUND_SIZE_W * FA * XR * YR,   // left top\n    //         ]\n    //     }\n    //     if (zi == 0 && xi > 0 && xi < this.GROUND_SIZE_W-1){\n    //         return [\n    //             ((xi-1) * XR + 1) * FA + 2  + (zi) * this.GROUND_SIZE_W * FA * XR * YR,   // left top\n    //             ((xi+0) * XR + 0) * FA + 2  + (zi) * this.GROUND_SIZE_W * FA * XR * YR,   // right top\n    //             ((xi+0) * XR + 1) * FA + 0  + (zi) * this.GROUND_SIZE_W * FA * XR * YR,   // middle top\n    //         ]\n    //     }\n    //     if (zi == this.GROUND_SIZE_L-1 && xi > 0 && xi < this.GROUND_SIZE_W-1){\n    //         return [\n    //             ((xi-1) * XR + 0) * FA + 1  + (zi-1) * this.GROUND_SIZE_W * FA * XR * YR, // left bottom\n    //             ((xi-1) * XR + 1) * FA + 1  + (zi-1) * this.GROUND_SIZE_W * FA * XR * YR, // middle bottom\n    //             ((xi+0) * XR + 0) * FA + 0  + (zi-1) * this.GROUND_SIZE_W * FA * XR * YR, // right bottom\n    //         ]\n    //     }\n\n    //     return []\n    // }","import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3,\n\tColor\n} from 'three';\n\n// o object_name | g group_name\nconst _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst _material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst _material_use_pattern = /^usemtl /;\n// usemap map_name\nconst _map_use_pattern = /^usemap /;\nconst _face_vertex_data_separator_pattern = /\\s+/;\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\nconst _cb = new Vector3();\n\nconst _color = new Color();\n\nfunction ParserState() {\n\n\tconst state = {\n\t\tobjects: [],\n\t\tobject: {},\n\n\t\tvertices: [],\n\t\tnormals: [],\n\t\tcolors: [],\n\t\tuvs: [],\n\n\t\tmaterials: {},\n\t\tmaterialLibraries: [],\n\n\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\tthis.object.name = name;\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t\tthis.object = {\n\t\t\t\tname: name || '',\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\tgeometry: {\n\t\t\t\t\tvertices: [],\n\t\t\t\t\tnormals: [],\n\t\t\t\t\tcolors: [],\n\t\t\t\t\tuvs: [],\n\t\t\t\t\thasUVIndices: false\n\t\t\t\t},\n\t\t\t\tmaterials: [],\n\t\t\t\tsmooth: true,\n\n\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\tconst previous = this._finalize( false );\n\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst material = {\n\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\tconst cloned = {\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t},\n\n\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t},\n\n\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Inherit previous objects material.\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\n\t\t\t\tdeclared.inherited = true;\n\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t}\n\n\t\t\tthis.objects.push( this.object );\n\n\t\t},\n\n\t\tfinalize: function () {\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t},\n\n\t\taddVertex: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddVertexPoint: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddVertexLine: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.normals;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\t_vA.fromArray( src, a );\n\t\t\t_vB.fromArray( src, b );\n\t\t\t_vC.fromArray( src, c );\n\n\t\t\t_cb.subVectors( _vC, _vB );\n\t\t\t_ab.subVectors( _vA, _vB );\n\t\t\t_cb.cross( _ab );\n\n\t\t\t_cb.normalize();\n\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\n\t\t},\n\n\t\taddColor: function ( a, b, c ) {\n\n\t\t\tconst src = this.colors;\n\t\t\tconst dst = this.object.geometry.colors;\n\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddUV: function ( a, b, c ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t},\n\n\t\taddDefaultUV: function () {\n\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\n\t\t},\n\n\t\taddUVLine: function ( a ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t},\n\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\n\n\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t// normals\n\n\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\tconst nLen = this.normals.length;\n\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t} else {\n\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t} else {\n\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\tthis.addDefaultUV();\n\n\t\t\t}\n\n\t\t},\n\n\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\tthis.addColor( index );\n\n\t\t\t}\n\n\t\t},\n\n\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\tconst vLen = this.vertices.length;\n\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t}\n\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tstate.startObject( '', false );\n\n\treturn state;\n\n}\n\n//\n\nclass OBJLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterials( materials ) {\n\n\t\tthis.materials = materials;\n\n\t\treturn this;\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst state = new ParserState();\n\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t}\n\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t}\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet result = [];\n\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\tconst line = lines[ i ].trimStart();\n\n\t\t\tif ( line.length === 0 ) continue;\n\n\t\t\tconst lineFirstChar = line.charAt( 0 );\n\n\t\t\t// @todo invoke passed in handler if any\n\t\t\tif ( lineFirstChar === '#' ) continue; // skip comments\n\n\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\tconst data = line.split( _face_vertex_data_separator_pattern );\n\n\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t_color.setRGB(\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\t\t\t\t\t\t\t).convertSRGBToLinear();\n\n\t\t\t\t\t\t\tstate.colors.push( _color.r, _color.g, _color.b );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst vertexData = lineData.split( _face_vertex_data_separator_pattern );\n\t\t\t\tconst faceVertices = [];\n\n\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertex = vertexData[ j ];\n\n\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\tconst v1 = faceVertices[ 0 ];\n\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\tconst v2 = faceVertices[ j ];\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\tlet lineVertices = [];\n\t\t\t\tconst lineUVs = [];\n\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst pointData = lineData.split( ' ' );\n\n\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// o object_name\n\t\t\t\t// or\n\t\t\t\t// g group_name\n\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t// let name = result[ 0 ].slice( 1 ).trim();\n\t\t\t\tconst name = ( ' ' + result[ 0 ].slice( 1 ).trim() ).slice( 1 );\n\n\t\t\t\tstate.startObject( name );\n\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\n\n\t\t\t\t// material\n\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\n\n\t\t\t\t// mtl file\n\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\n\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t// smooth shading\n\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = state.object.currentMaterial();\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t} else {\n\n\t\t\t\t// Handle null terminated files without exception\n\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.finalize();\n\n\t\tconst container = new Group();\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\tif ( hasPrimitives === true ) {\n\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tconst object = state.objects[ i ];\n\t\t\t\tconst geometry = object.geometry;\n\t\t\t\tconst materials = object.materials;\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\n\t\t\t\tlet hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tconst createdMaterials = [];\n\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\tlet material = state.materials[ materialHash ];\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst points = new Points( buffergeometry, material );\n\t\t\t\tcontainer.add( points );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn container;\n\n\t}\n\n}\n\nexport { OBJLoader };","import * as THREE from 'three';\n\nfunction htmlFromString(html: string): HTMLElement {\n    let div = document.createElement('div');\n    div.innerHTML = html;\n    div.classList.add('html3d');\n    return div;\n}\n\nconst frustum = new THREE.Frustum();\nfunction isInCamera(view: THREE.Camera, position: THREE.Vector3) {\n    frustum.setFromProjectionMatrix(new THREE.Matrix4().multiplyMatrices(view.projectionMatrix, view.matrixWorldInverse));\n    return frustum.containsPoint(position);\n}\n\n\nexport class Html3D {\n    private element: HTMLElement;\n    private position: THREE.Vector3;\n    private width: number;\n    private height: number;\n    private dom: HTMLElement;\n\n    constructor(html: string) {\n        this.dom = document.getElementById(\"html3d-container\")\n        this.element = htmlFromString(html);\n        document.body.appendChild(this.element);\n\n        this.width = this.element.offsetWidth;\n        this.height = this.element.offsetHeight;\n        this.position = new THREE.Vector3(0, 0, 0);\n    }\n\n    public update() {\n        this.element.style.display = \"block\";\n        this.width = this.element.offsetWidth;\n        this.height = this.element.offsetHeight;\n        console.log(this.width, this.height);\n        \n    }\n\n    public setPosition(x: number, y: number, z: number) {\n        this.position = new THREE.Vector3(x, y, z);\n    }\n    public getPosition() {\n        return this.position;\n    }\n    public move(x: number, y: number, z: number) {\n        this.position.add(new THREE.Vector3(x, y, z));\n    }\n\n    public alpha(alpha: number) {\n        this.element.style.backgroundColor = `rgba(64, 64, 64, ${alpha})`;\n    }\n\n    private computePositionInWorldSpace(camera: THREE.Camera) {\n        let cam_pos = camera.position.clone();\n        let position = this.position.clone();\n\n        let distance = cam_pos.distanceTo(this.position);\n\n        if (distance > 500) {\n            return { position, scale: 0 };\n        }\n        let alpha = 1.0;\n        if (distance > 400) {\n            alpha = 1 - (distance - 400) / 100;\n        }\n\n\n        // check if the object is in camera view\n        if (!isInCamera(camera, position)){\n            return { position, scale: 0 };\n        }\n        position.project(camera);\n\n\n\n        position.x = (position.x + 1) / 2 * window.innerWidth - this.width / 2;\n        position.y = (-position.y + 1) / 2 * window.innerHeight - this.height / 2;\n\n        var scale = 70.0 / distance\n\n\n\n        return { position, scale, alpha };\n    }\n\n\n    public render(camera: THREE.Camera) {\n        let { position, scale, alpha } = this.computePositionInWorldSpace(camera);\n        if (scale == 0) {\n            this.element.style.display = 'none';\n            return;\n        }\n        else {\n            this.element.style.display = 'block';\n        }\n\n        var canvas = document.getElementById(\"threejs\")\n        var top = canvas.style.top\n        \n\n        var a = (this.position.z - 150) / (10 - 150) * (0.8 - 0) + 0;    \n        console.log(this.position.z, a);\n            \n        this.alpha(a);\n        \n\n        this.element.style.left = position.x + 'px';\n        if (top != \"\")\n            this.element.style.top = \"calc(\"+position.y + 'px + '+top+\")\";\n        else\n            this.element.style.top = position.y + 'px';\n        this.element.style.transform = 'scale(' + scale + ')';\n        this.element.style.opacity = alpha.toString();\n\n    }\n}","\nimport * as THREE from 'three';\nimport { LightProbeGenerator } from './threeAddons/lights/LightProbeGenerator.js';\nimport { Mountain } from './mountain';\nimport { OBJLoader } from './threeAddons/loaders/OBJLoarder';\nimport { Html3D } from './Html3D';\nimport { modulo, rgb2hex } from './utils';\n\n\n\nconst API = {\n    lightProbeIntensity: 1.0,\n    directionalLightIntensity: 0.6,\n    envMapIntensity: 1\n};\n\nconst FRAME_RATE = 30;\nconst VIEW = {fov:75, near:0.1,far:1000}\n\nconst GROUND_WIDTH = 128;\nconst GROUND_LENGHT = 500;\nconst GROUND_SAMPLES = 1; // pts per unit\nconst GROUND_SIZE_W = GROUND_WIDTH * GROUND_SAMPLES;\nconst GROUND_SIZE_L = GROUND_LENGHT * GROUND_SAMPLES;\n\nconst plane_model = require(\"../assets/LP_Airplane.obj\");\n\n\nconst MAX_SPEED  = 170.0/10.0;\nconst ACCERATION =  20.0/10.0;\n\nclass app{\n\n    scene:THREE.Scene;\n    renderer:THREE.WebGLRenderer;\n    view:THREE.PerspectiveCamera;\n    floor:THREE.Mesh;\n\n    rotate = false;\n    mouse = {x:0, y:0};\n\n    mountain:Mountain;\n    plane:THREE.Object3D;\n\n\n    texts:Html3D[] = [];\n\n    scoll_offset = 0;\n    scroll_momentum = 0;\n    move_forward = 1;\n    last_stop = 0;\n    skipping = false;\n    stop_skipping = false;\n\n    main_title = true;\n\n\n\n    init() {\n\n        this.scene = new THREE.Scene();\n        // this.scene.background = new THREE.Color(rgb2hex(169, 199, 201));\n\n        this.view = new THREE.PerspectiveCamera(VIEW.fov, window.innerWidth / window.innerHeight, VIEW.near, VIEW.far);\n        this.view.position.z = -50;\n        this.view.position.y = 15;\n        this.view.position.x = 5;\n        this.view.lookAt(0, 10, 0);\n\n        // const ambientLight = new THREE.AmbientLight(0x999999); // soft white light\n        // this.scene.add(ambientLight);\n\n        const directionalLight = new THREE.DirectionalLight(rgb2hex(255, 221, 179), 1.0);\n        directionalLight.position.set(-10, 50, -20);\n        directionalLight.castShadow = true;\n        directionalLight.shadow.mapSize.width = 2048; // default\n        directionalLight.shadow.mapSize.height = 2048; // default\n        directionalLight.shadow.camera.near = 0.5; // default\n        directionalLight.shadow.camera.far = 200; // default\n        directionalLight.shadow.camera.left = -50;\n        directionalLight.shadow.camera.right = 150;\n        directionalLight.shadow.camera.top = 150;\n        directionalLight.shadow.camera.bottom = -50;\n        this.scene.add(directionalLight);\n        // this.scene.add( new THREE.CameraHelper( directionalLight.shadow.camera ) );\n\n        const hemiLight = new THREE.HemisphereLight(\n            rgb2hex(255, 255, 255),\n            rgb2hex(84, 71, 148), 1);\n        hemiLight.position.set(-10, 50, -20);\n        this.scene.add(hemiLight);\n\n\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true, canvas: document.getElementById('threejs')});\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.renderer.toneMapping = THREE.ReinhardToneMapping;\n        this.renderer.toneMappingExposure = 1.2;\n        \n        // document.body.appendChild(this.renderer.domElement);\n\n        \n        this.mountain = new Mountain(GROUND_WIDTH, GROUND_LENGHT);\n        this.mountain.setPosition(0, -40, 0);\n\n        this.mountain.onLoad(()=>{\n            var meshes = this.mountain.getMeshs()\n            for (let i = 0; i < meshes.length; i++) {\n                this.scene.add(meshes[i])\n            }\n        });\n\n        const objLoader = new OBJLoader();\n        objLoader.load(plane_model, (object) => {\n            // rotate 90 degrees\n            object.rotation.y = -Math.PI/2;\n            object.scale.set(6, 6, 6);\n            this.plane = object;\n            // this.plane.castShadow = true;\n            for (let i = 0; i < this.plane.children.length; i++) {\n                this.plane.children[i].castShadow = true;\n                this.plane.children[i].receiveShadow = true;\n            }\n            \n            this.scene.add(this.plane);\n        });\n\n        \n\n\n        var title = new Html3D('<div class=\"text-container\"> <h1> Projet DAPIA </h1> <h2> Sécuriser le contrôle du traffic aérien </h2> <div>'); //<span class=\"material-icons-outlined big\"> south </span> \n        title.setPosition(0, 20, 10);\n        this.texts.push(title);\n\n        for (let i = 1; i < 5; i++) {\n            var paragraph = new Html3D('<div class=\"text-container\"> <h1> Lorem ipsum dolor sit amet </h1> <p> Consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum </p> <div>');\n            paragraph.setPosition(0, 20, i * 500 + 10);\n            this.texts.push(paragraph);\n        }\n\n\n        \n        setInterval(()=>{\n            this.frame()\n            for (let i = 0; i < this.texts.length; i++) {\n                this.texts[i].render(this.view);\n            }\n            this.render()\n        }, 1000.0/FRAME_RATE);\n    }\n\n    frame(){\n        var t = new Date().getTime() / 1000.0;\n        if (this.scoll_offset > 80){\n            this.plane.position.y = Math.cos(t*1.5) * 0.25;\n        }\n\n        var scoll_interval = modulo(this.scoll_offset, 500);\n        var scoll_region = Math.floor((this.scoll_offset+200) / 500) * 500;\n        \n        \n        // if we are in the middle of two pages : fast scroll\n        if ((scoll_interval > 150 && scoll_interval < 450))\n        {\n            this.skipping = true;\n            this.scroll_momentum += this.move_forward * ACCERATION;\n            if (Math.abs(this.scroll_momentum) > MAX_SPEED){\n                this.scroll_momentum = MAX_SPEED * this.move_forward;\n            }\n        }\n        \n        // if we get out of a skip zone, we must slow down !\n        else if (this.skipping){\n            // activate air resistance\n            this.stop_skipping = true;\n\n            // manage perfect stop\n            if (this.move_forward > 0){\n                var scroll_stop = scoll_region + 0\n\n                if (this.scoll_offset + this.scroll_momentum > scroll_stop){\n                    this.scroll_momentum = (scroll_stop - this.scoll_offset)/2.0;\n                    if ((scroll_stop - this.scoll_offset) < 1.0) this.scroll_momentum = (scroll_stop - this.scoll_offset)\n                }\n            }\n            else{\n                var scroll_stop = scoll_region + 0\n                if (this.move_forward < 0 && this.scoll_offset + this.scroll_momentum < scroll_stop){\n                    this.scroll_momentum = (scroll_stop - this.scoll_offset)/2.0;\n                    if ((scroll_stop - this.scoll_offset) > -1.0) this.scroll_momentum = (scroll_stop - this.scoll_offset)\n                }\n            }\n        }\n\n        \n        if (Math.abs(this.scroll_momentum) > 0.1){\n            this.forward(this.scroll_momentum);\n        }\n        else{\n            this.scroll_momentum = 0;\n            this.skipping = false;\n            this.stop_skipping = false;\n        }\n\n        // apply the down force\n        if (this.skipping){\n            if (!this.stop_skipping) this.scroll_momentum *= 1.0;\n            else this.scroll_momentum *= 0.90;\n        }\n        else{\n            this.scroll_momentum *= 0.75;\n        }\n\n        this.mountain.update(this.scoll_offset);\n    }\n\n    render(){\n        this.renderer.render(this.scene, this.view);\n    }\n\n\n\n    forward(speed){\n        var scoll = speed;\n        if (scoll > 0) this.move_forward = 1;\n        else this.move_forward = -1;\n\n        // force the backward if the user scroll back to title\n        if (this.scoll_offset < 100 && this.move_forward < 0){\n            this.scroll_momentum = -MAX_SPEED;\n        }\n\n        if (this.move_forward < 0){\n            if (this.scoll_offset + scoll <= 250){\n\n                if (!this.main_title){\n                    this.main_title = true;\n                    this.anime_in();\n                }\n            }\n        } else {\n            if (this.scoll_offset + scoll > 0){\n                if (this.main_title){\n                    this.main_title = false;\n                    this.anime_out();\n                }\n            }\n        }\n        if (this.scoll_offset + scoll < 0){\n            scoll = -this.scoll_offset;\n        }\n\n        this.scoll_offset += scoll;\n        this.mountain.shift_noise(scoll);\n\n        for (let i = 0; i < this.texts.length; i++) {\n            let z = i*500 + 10 - this.scoll_offset;\n            if (z > 10){\n                this.texts[i].setPosition(0, 20, 10+ i*500 - this.scoll_offset);\n            }\n            else{\n                this.texts[i].setPosition(0, 20 + (-i * 500 + this.scoll_offset) * 0.07, 10);\n            }\n        }\n\n    }\n\n\n\n\n\n\n    right_pressed(e){\n        this.rotate = true;\n        this.mouse = {x:e.clientX, y:e.clientY};\n    }\n\n    right_released(){\n        this.rotate = false;\n    }\n\n    mouse_move(event){\n        if(this.rotate){\n            const dx = event.clientX - this.mouse.x;\n            const dy = event.clientY - this.mouse.y;\n\n            var viewX = this.view.position.x;\n            var viewY = this.view.position.y;\n            var viewZ = this.view.position.z;\n\n            var r = Math.sqrt(viewX**2 + viewY**2 + viewZ**2);\n            var teta = Math.atan2(viewZ, viewX);\n            var phi = Math.acos(viewY/r);\n\n            teta += dx/100;\n            phi -= dy/100;\n\n            this.view.position.x = r * Math.sin(phi) * Math.cos(teta);\n            this.view.position.z = r * Math.sin(phi) * Math.sin(teta);\n            this.view.position.y = r * Math.cos(phi);\n\n            this.view.lookAt(0, 10, 0);\n\n            this.mouse.x = event.clientX;\n            this.mouse.y = event.clientY;\n        }\n        \n    }\n\n    zoom(event){\n        var speed = event.deltaY;\n        this.scroll_momentum = speed / 5.0;\n    }\n\n    anime_out(){\n        var header = document.getElementById('header');\n        var content = document.getElementById('content');\n        var canvas = document.getElementById('threejs');\n\n        var header_target = -header.offsetHeight;\n        var content_target = content.offsetHeight;\n        var canvas_target = 0; //vh\n\n        var header_origin = 0;\n        var content_origin = 0;\n        var canvas_origin = -20;\n\n        var header_pos = header_origin;\n        var content_pos = content_origin;\n        var canvas_pos = -canvas_origin;\n\n        var duration = 600;\n        var t = 0;\n\n\n\n        var interval = undefined;\n        interval = setInterval(()=>{\n            t += 1000.0/FRAME_RATE;\n\n            // lerp\n            header_pos = header_origin + (header_target - header_origin) * t/duration;\n            content_pos = content_origin + (content_target - content_origin) * t/duration;\n            canvas_pos = canvas_origin + (canvas_target - canvas_origin) * t/duration;\n\n            header.style.top = header_pos + \"px\";\n            content.style.top = content_pos + \"px\";\n            canvas.style.top = canvas_pos + \"vh\";\n\n\n            this.scroll_momentum = MAX_SPEED;\n\n            if (t >= duration){\n                clearInterval(interval);\n                canvas.style.top = canvas_target + \"vh\";\n                \n                header.style.top = header_target + \"px\";\n                content.style.top = content_target + \"px\";\n\n                header.style.display = 'none';\n                content.style.display = 'none';\n            }\n\n        }, 1000.0/FRAME_RATE);\n    }\n\n    anime_in(){\n        var header = document.getElementById('header');\n        var content = document.getElementById('content');\n        var canvas = document.getElementById('threejs');\n\n        var header_target = 0;\n        var content_target = 0;\n        var canvas_target = -20; //vh\n\n        var header_origin = parseInt(header.style.top);\n        var content_origin = parseInt(content.style.top);\n        var canvas_origin = 0;\n\n        var header_pos = header_origin;\n        var content_pos = content_origin;\n        var canvas_pos = -canvas_origin;\n\n        var duration = 600;\n        var t = 0;\n\n        header.style.display = 'flex';\n        content.style.display = 'flex';\n\n        var interval = undefined;\n        interval = setInterval(()=>{\n            t += 1000.0/FRAME_RATE;\n\n            // lerp\n            header_pos = header_origin + (header_target - header_origin) * t/duration;\n            content_pos = content_origin + (content_target - content_origin) * t/duration;\n            canvas_pos = canvas_origin + (canvas_target - canvas_origin) * t/duration;\n\n            header.style.top = header_pos + \"px\";\n            content.style.top = content_pos + \"px\";\n            canvas.style.top = canvas_pos + \"vh\";\n\n            if (t >= duration){\n                clearInterval(interval);\n                canvas.style.top = canvas_target + \"vh\";\n                \n                header.style.top = header_target + \"px\";\n                content.style.top = content_target + \"px\";\n            }\n\n        }, 1000.0/FRAME_RATE);\n    }\n\n\n\n    \n    resize(event){\n        for (let i = 0; i < this.texts.length; i++) {\n            this.texts[i].update();\n        }\n        this.view.aspect = window.innerWidth / window.innerHeight;\n        this.view.updateProjectionMatrix();\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n}\n\n\nconst a = new app();\ndocument.addEventListener('DOMContentLoaded', () => {\n    a.init();\n});\n\n// right mouse button\n// document.addEventListener('contextmenu', (event) => {\n//     event.preventDefault();\n// });\n// document.addEventListener('mousedown', (event) => {\n//     if(event.button == 2){\n//         a.right_pressed(event);\n//     }\n// });\n// document.addEventListener('mouseup', (event) => {\n//     if(event.button == 2){\n//         a.right_released();\n//     }\n// });\ndocument.addEventListener('mousemove', (event) => {\n    a.mouse_move(event);\n});\ndocument.addEventListener('wheel', (event) => {\n    a.zoom(event);\n    // a.forward(40*event.deltaY/120);\n});\n\nwindow.addEventListener(\"resize\", (event)=>{\n    a.resize(event);\n});\n\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}